{"version":3,"sources":["include/jquery.js","subViews/datasetList/components/DatasetDropList.js","utils/utils.js","config.js","constants.js","utils/restApis.js","utils/stateUtils.js","utils/restUtils.js","subViews/datasetList/actions.js","subViews/datasetList/components/DatasetDropListContainer.js","utils/filterUtils.js","subViews/filters/components/FilterEditor.js","subViews/filters/actions.js","subViews/filters/components/FilterEditorContainer.js","subViews/filters/components/FilterSummary.js","subViews/filters/components/FilterSummaryContainer.js","subViews/sorting/components/SortingListGroup.js","subViews/sorting/actions.js","subViews/sorting/components/SortingListGroupContainer.js","subViews/httpBoard/components/HttpBoard.js","subViews/httpBoard/actions.js","subViews/httpBoard/components/HttpBoardContainer.js","common/components/ItemList.js","subViews/attributes/actions.js","subViews/attributes/components/AttributesContainer.js","subViews/metrics/actions.js","subViews/metrics/components/MetricsContainer.js","subViews/AttributeMetricArea.js","subViews/resultTable/components/ResultTable.js","subViews/resultTable/actions.js","subViews/resultTable/components/ResultTableContainer.js","main/components/MainPage.js","main/actions.js","main/components/MainPageContainer.js","initialState.js","subViews/filters/reducer.js","main/uiReducer.js","subViews/attributes/reducer.js","subViews/metrics/reducer.js","subViews/datasetList/reducer.js","subViews/resultTable/reducer.js","utils/transformResult.js","subViews/httpBoard/reducer.js","subViews/sorting/reducer.js","main/rootReducer.js","serviceWorker.js","index.js"],"names":["window","jQuery","$","DatasetDropList","this","props","onGetDatasetList","eventKey","_this$props","ui","onChangeDataset","selectDatasetIndex","_this","_this$props2","data","isEmpty","length","title","name","react_default","a","createElement","className","DropdownButton","id","disabled","map","dataset","i","MenuItem","key","active","onSelect","ek","onSelectAlert","React","Component","getQueryString","params","str","p","hasOwnProperty","substring","httpErrorHandling","dispatch","errorActionType","err","console","log","type","payload","response","message","sortingDataTransform","definition","availableObjects","attributes","element","attribute","concat","metrics","metric","flatMap","filter","undefined","forms","subElement","form","demoConfig","restServerUrl","projectId","itemPerPage","cubes","reports","datasets","MAIN_UI_ACTIONS","DATASET_LIST_ACTIONS","ATTRIBUTES_ACTIONS","METRIC_ACTIONS","FILTER_ACTIONS","SORT_ACTIONS","RESULT_ACTIONS","HTTP_ACTIONS","CONSTANTS","CUBE_TYPE","callRestApi","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","url","options","finalOptions","headers","wrap","_context","prev","next","content-type","objectSpread","defineProperty","sessionStorage","getItem","axios","withCredentials","sent","responseStatus","status","responseHeader","responseBody","requestHeader","requestData","method","abrupt","stop","_x","_x2","_x3","apply","arguments","login","_ref2","_callee2","_context2","loginMode","_x4","loginAndResetToken","_ref3","_callee3","loginResponse","_context3","accessToken","toLowerCase","setItem","_x5","requestRetry","_ref4","_callee4","_context4","t0","_x6","_x7","_x8","getDatasetListByType","_ref5","_callee5","projectID","_context5","limit","totalItems","result","_x9","_x10","_x11","getDatasetDefinition","_ref6","_callee6","urlPrefix","_context6","subtype","_x12","_x13","_x14","getAttributeElements","_ref7","_callee7","instanceId","attributeId","_context7","offset","_x15","_x16","_x17","_x18","_x19","getObjectData","_ref8","_callee8","instanceID","pageIdx","_context8","_x20","_x21","_x22","_x23","_x24","createInstance","_ref9","_callee9","postBody","_context9","_x25","_x26","_x27","_x28","_x29","getProjectId","state","getInstanceId","resultTable","getCurrentDatasetAttributes","getCurrentDatasetDefProperty","getCurrentDatasetMetrics","propertyName","currentDataset","getCurrentDataset","_state$datasetList","datasetList","getCreateInstancePostBody","attributesUnselect","unselect","metricsUnselect","attributeAllSelect","keys","metricAllSelect","allAttributes","allMetrics","requestedObjects","filters","viewFilter","expressions","assign","metricLimits","sortingRequest","sorting","output","filterUnselectElementFromSortingOutput","_","get","getDatasetListAsync","getState","allTypes","datasetsList","datasetDefList","validDatasets","Promise","all","toConsumableArray","createInstanceAsync","getObjectDataAsync","getAttributeElementsAsync","getDatasetList","getDatasetsAndCreateInstance","catch","changeSelectDataset","index","createInstanceAndRefreshTable","datasetsResult","pageIndex","connect","bindActionCreators","operators","value","listOptions","contructNewExpressionFromRawdata","rawExpressionData","operator","firstOperand","secondOperand","newExpression","contentDisplay","expressionIndex","isAttribute","targetObject","formName","selectAttributeForm","isQualification","selectedElements","selectedListOperator","constant","dataType","expression","operands","selectedElementNames","join","elements","targetObjectId","isViewFilter","destructParamsFromQualificationExpression","metricLimitTargetObjectId","selectedIndex","formId","selectFormIndex","findIndex","availableObject","operatorIndex","operatorElement","destructParamsFromANExistingExpression","selectedListOptionIndex","selectedElementIndexs","isALLElementChecked","listOption","_destructParamsFromQu","forEach","selectedElement","push","_destructParamsFromQu2","isEditing","FilterEditor","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","isOkButtonEnable","_this2","isAttributeSelected","editTitleContent","titlePart","Modal","backdrop","onEntered","onHide","onClose","Header","closeButton","Title","Body","targetObjectSelectChange","chooseElementPart","availableOptionsAndChooseElementPart","availableForms","availableListOptions","availableOptions","isQualificationSelectChange","onClick","e","formSelectChange","checked","readOnly","htmlFor","listOptionSelectChange","ref","constructChooseElementsPart","clickAllElements","clickMultiElementSpan","find","selectedElementIndex","onChange","clickMultiElementOption","selectedClass","onOperatorOptionclick","tabIndex","middlePartInFilterUI","placeholder","ConstantValueChange","Footer","onClickOK","setState","parseInt","target","needCheck","newSelectedElementIndexs","selectElement","clickMultiElement","refs","getCheckBoxElementName","changingToSelectInList","onGetAttributeElement","handleCloseEditor","onClickAddOrModifyExpression","rawExpessionData","onModifyExpression","onAddNewExpression","getAttributeElement","getAttributeElementWithRetry","deleteAnExpression","addNewExpression","modifyExpression","clearAllFilterExpressions","needChange","FilterSummary","showEditorModal","viewFilterSummary","metricLimitSummary","summary","handleShowEditor","handleDeleteExpression","event","metricId","stopPropagation","onDeleteAnExpression","onClearAllFilterExpressions","expressionContent","evt","uiResult","_loop","metricIdSummaryline","summaryContentUI","FilterEditorContainer","SortingListGroup","elementNum","onChangeSortingElement","onChangeSortingOutputData","onChangeSortingChoice","d","sortby","sortingDropdownNum","onAddDropdownAction","order","onAddSortingDropdown","hasSelectElement","getElementName","isElementSelected","onDeleteSortingDropdown","onClearSortingState","_this$props3","_this$props$ui","elementDropDownIsDisabled","onClearSortingStateButtonClick","ListGroup","Array","selected","isCurrentIndexSelected","ListGroupItem","dropup","getSortingElementTitle","current","j","onSortingElemetsSelectChange","includes","useDefaultSortingOrder","getSortingChoiceTile","onSortingChoiceSelectChange","OverlayTrigger","placement","overlay","Tooltip","onDeleteDropdownButtonClick","changeSortingElement","dropDownIndex","subIndex","changeSortingChoice","addSortingDropdown","dropDownNum","changeSortingData","deleteSortingDropdown","clearSortingState","_state$sorting","TAB_HEADER","HttpBoard","selectRequestIndex","onSelectRequest","selectDetailTab","onSelectDetailTab","request","toUpperCase","headerKey","JSONPretty_default","json","hasSelectedOneRequest","onClearRequests","selectClass","lastUrlItem","selectRequest","headerText","generateHeadersTabContent","generateResponseTabContent","clearRequests","_state$http","http","ItemList","items","isAttributeList","onChangeItemSelection","onChangeAllSelection","categoryIconClass","currentAllSel","changeAllSelection","item","toggleAttributeSelection","toggleAttributeAllSelection","select","toggleMetricSelection","toggleMetricAllSelection","AttributeMetricArea","AttributesContainer","MetricsContainer","VALID_POSITIVE_NUM_REGEX","CurrentPageInput","realCurPage","curPageInputText","currentPageIndex","toString","rawValue","match","totalPageCount","switchPageTimer","clearTimeout","isValidValue","setTimeout","onGoToPage","_this3","errorClassName","loading","onChangeCurrentPage","ResultTable","ResultTable_CurrentPageInput","index_esm","chartType","width","height","showRowNumber","sort","goToPage","getObjectDataWithRetry","_data","_state$resultTable","MainPage","dataIsEmpty","latestError","showError","onApplyCondition","onHideErrorMessage","Alert","bsStyle","onDismiss","DatasetDropListContainer","src_subViews_AttributeMetricArea","FilterSummaryContainer","SortingListGroupContainer","Button","ResultTableContainer","HttpBoardContainer","hideErrorMessage","applyCondition","then","_state$ui","initialState","pageLimit","reducer","action","produce","newState","newMetricLimitsExpressions","newMetricLimitsSummary","newMetricLimitExpression","modifyExpressionIndex","modifyContentDisplay","slice","deleteIndex","uiReducer","_action$payload","_step","_iterator","_createForOfIteratorHelper","s","n","done","f","reducer_createForOfIteratorHelper","newData","attributeIndex","PAGE_SIZE","paging","Math","ceil","total","array","getElementsForRowName","row","formIndex","subtotal","formValues","getElementsForColumnName","column","mapIndex","rowElements","indexMap","r","rowIndex","rows","grid","responseRowData","curRowData","rowName","parseRows","columnElements","columns","responseColumnData","columnIndex","curColumnData","columnName","parseColumns","metricElements","parseMetrics","headerDataRows","rowNames","col","valueIndex","columnNames","metricValues","raw","formattedwData","formatted","allHeaders","allRows","getTableData","syncToOutput","allSubReducers","combineReducers","datasetsReducer","filtersReducer","sortingReduce","httpReducer","attributesReducer","metricsReducer","resultTableReducer","rootReducer","sortingData","Boolean","location","hostname","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","MainPageContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f772b67.chunk.js","sourcesContent":["import * as $ from 'jquery'\n\nwindow.jQuery = window.$ = $\n","import React from 'react'\n\nimport '../../../include/bootstrap'\nimport './DatasetDropList.scss'\n\nimport {DropdownButton, MenuItem} from 'react-bootstrap'\n\nclass DatasetDropList extends React.Component{\n    componentWillMount(){\n        this.props.onGetDatasetList()\n    }\n\n    onSelectAlert(eventKey){\n        const {ui, onChangeDataset} = this.props\n        const {selectDatasetIndex} = ui\n        if (eventKey === selectDatasetIndex) {\n            return\n        }\n        else{\n            onChangeDataset(eventKey)\n        }\n    }\n\n    render(){\n        const {data, ui} = this.props\n        const {selectDatasetIndex} = ui\n        const isEmpty = data.length === 0\n        const title = isEmpty ? \"Loading datasets...\" : data[selectDatasetIndex].name\n        return (\n            <div className=\"QP__datasetList\">\n                <div className=\"QP__datasetList__title\">Datasets</div>\n                <DropdownButton id=\"dataset-list-dropdown\" className=\"QP__datasetList__dropdownButton\" \n                    disabled={isEmpty} title={title}>\n                    {\n                        data.map((dataset, i) => (\n                            <MenuItem key={i} active={i === selectDatasetIndex} eventKey={i} onSelect={(ek) => this.onSelectAlert(ek)}>\n                                {dataset.name}\n                            </MenuItem>\n                        ))\n                    }\n                </DropdownButton>\n            </div>\n        )\n    }\n}\n\nexport default DatasetDropList\n","import * as $ from 'jquery'\nimport {flatMap} from 'lodash'\n\n\nexport const decodeHtml = (html) => {\n  return $('<div/>').html(html).text()\n}\n\nexport const getQueryString = (params) => {\n  if (!params) {\n    return ''\n  }\n  let str = '?';\n  for (const p in params) {\n    if (params.hasOwnProperty(p)) {\n      str += p + '=' + params[p] + '&'\n    }\n  }\n  return str.substring(0, str.length - 1);\n}\n\nexport const httpErrorHandling = (dispatch, errorActionType) => {\n  return (err) => {\n    console.log('err response:', err)\n    dispatch({\n      type: errorActionType,\n      payload: (err.response && err.response.data && err.response.data.message) || 'Request error!'\n    })\n  }\n}\n\nexport const sortingDataTransform = (definition) => {\n  if (definition && definition.availableObjects) {\n    return definition.availableObjects.attributes.map(element => {\n      return {\n        type: \"attribute\",\n        attribute: {\n          id: element.id,\n          name: element.name\n        }\n      }\n    })\n      .concat(\n        definition.availableObjects.metrics.map(element => {\n          return {\n            type: \"metric\",\n            metric: {\n              id: element.id,\n              name: element.name\n            }\n          }\n        }))\n      .concat(\n        flatMap(definition.availableObjects.attributes.filter(element => {\n          return element.forms !== undefined\n        }), element => {\n          return element.forms.map(subElement => {\n            return {\n              type: \"form\",\n              attribute: {\n                id: element.id,\n                name: element.name\n              },\n              \"form\": {\n                id: subElement.id,\n                name: subElement.name\n              }\n            }\n          })\n        }\n        )\n      )\n  } else {\n    return []\n  }\n}\n","// ******** Configuration\n// NOTE: Modify \"mapResult\" to customize result / replace it with some sample JSON.\nconst demoConfig = {\n\n    // URL of the REST Server\n    restServerUrl: \"https://demo.microstrategy.com/MicroStrategyLibrary/api\",\n    //  : \"/api\",\n\n    // Project ID\n    projectId: \"B7CA92F04B9FAE8D941C3E9B7E0CD754\",\n\n    // Credentials to connect to the MicroStrategy Intelligence Server\n    // username: \"guest\",  \n    // password: \"\",\n\n    // Number of items the table will display per page\n    itemPerPage: 20,\n\n    // MicroStrategy Objects\n\n    cubes: [\n        // \"BD91AF40492D2C188240DEAF7D9D1510\"\n    ],\n\n    reports: [\n       // \"256263D142248D56446F3A80AD100C06\"\n\n    ],\n\n    datasets: [\n        //{\n        //    // Id of the cube or report used\n        //    id: \"912EA3954331445DCB29558319CA5E32\",\n        //\n        //    // True if running a cube, false if running a report\n        //    isCube: false,\n        //\n        //    // Custom request body\n        //    // Note: If you choose request objects / view filter from the UI, this will be overridden.\n        //    // Note: requestedObjects is only supported on cubes.\n        //    predefinedRequestBody: {\n        //        \"requestedObjects\" : null,\n        //        \"viewFilter\" : null\n        //    },\n        //},\n    ],\n}\n\nexport default demoConfig\n","export const MAIN_UI_ACTIONS = {\n    DISPLAY_ERROR_MSG: \"DISPLAY_ERROR_MSG\",\n    HIDE_ERROR_MSG: \"HIDE_ERROR_MSG\"\n}\n\nexport const DATASET_LIST_ACTIONS = {\n    SET_DATASET_LIST: \"SET_DATASET_LIST\",\n    CHANGE_SELECT_DATASET: \"CHANGE_SELECT_DATASET\"\n}\n\nexport const ATTRIBUTES_ACTIONS = {\n    TOGGLE_ATTRIBUTE_SELECTION: \"TOGGLE_ATTRIBUTE_SELECTION\",\n    TOGGLE_ALL_ATTRIBUTES: \"TOGGLE_ALL_ATTRIBUTES\"\n}\n\nexport const METRIC_ACTIONS = {\n    TOGGLE_METRIC_SELECTION: \"TOGGLE_METRIC_SELECTION\",\n    TOGGLE_ALL_METRICS: \"TOGGLE_ALL_METRICS\"\n}\n\nexport const FILTER_ACTIONS ={\n    ADD_NEW_EXPRESSION: \"ADD_NEW_EXPRESSION\",\n    DELETE_AN_EXPRESSION: \"DELETE_AN_EXPRESSION\",\n    MODIFY_EXPRESSION: \"MODIFY_EXPRESSION\",\n    MODIFY_ATTRIBUTE_ELEMENTS: \"MODIFY_ATTRIBUTE_ELEMENTS\",\n    CLEAR_ALL_FILTER_EXPRESSIONS: \"CLEAR_ALL_FILTER_EXPRESSIONS\",\n}\n\nexport const SORT_ACTIONS = {\n    CHANGE_SORTING_ELEMENT: \"CHANGE_SORTING_ELEMENT\",\n    CHANGE_SORTING_CHOICE: \"CHANGE_SORTING_CHOICE\",\n    ADD_SORTING_DROPDOWN: \"ADD_SORTING_DROPDOWN\",\n    CHANGE_SORTING_DATA: \"CHANGE_SORTING_DATA\",\n    DELETE_SORTING_DROPDOWN: \"DELETE_SORTING_DROPDOWN\",\n    CLEAR_SORTING_STATE: \"CLEAR_SORTING_STATE\",\n}\n\nexport const RESULT_ACTIONS = {\n    REFRESH_INSTANCE_ID: \"REFRESH_INSTANCE_ID\",\n    REFRESH_RESULT_PANEL: \"REFRESH_RESULT_PANEL\",\n    GO_TO_PAGE: \"GO_TO_PAGE\",\n    BEGIN_LOADING_PAGE: \"BEGIN_LOADING_PAGE\"\n}\n\nexport const HTTP_ACTIONS = {\n    ADD_NEW_HTTP_REQUEST: \"ADD_NEW_HTTP_REQUEST\",\n    SELECT_REQUEST: \"SELECT_REQUEST\",\n    SELECT_DETAIL_TAB: \"SELECT_DETAIL_TAB\",\n    CLEAR_REQUESTS: \"CLEAR_REQUESTS\"\n}\n\nexport const CONSTANTS = {\n    MAX_TRY_COUNT: 2,\n    CUBE_TYPE: 776,\n    REPORT_TYPE: 768\n}\n","import axios from 'axios'\nimport demoConfig from '../config'\nimport {CONSTANTS, HTTP_ACTIONS} from '../constants'\n\n\nconst AUTH_URL = \"/auth/login\"\nconst GET_DATASET_URL = \"/searches/results\"\nconst CUBE_DEF_URL_PREFIX = \"/cubes/\"\nconst REPORT_DEF_URL_PREFIX = \"/reports/\"\nconst INSTANCES = \"/instances\"\nconst version = \"/v2\"\n\nconst X_MSTR_AUTH_TOKEN = \"X-MSTR-AuthToken\"\nconst X_MSTR_PROJECT_ID = \"X-MSTR-ProjectID\"\n\nconst LIMIT = 5\n\nconst {CUBE_TYPE} = CONSTANTS\n\nconst getAccessToken = () => {\n    return sessionStorage.getItem(X_MSTR_AUTH_TOKEN)\n}\n\nconst storeAccessToken = (accessToken) => {\n    sessionStorage.setItem(X_MSTR_AUTH_TOKEN, accessToken);\n}\n\nconst callRestApi = async (url, options, dispatch) => {\n    let finalOptions = options\n    let headers = {\n        \"content-type\": \"application/json\"\n    }\n    if (url !== AUTH_URL) {\n        headers = { \n            ...headers,\n            ...options.headers, \n            [X_MSTR_AUTH_TOKEN]: getAccessToken()\n        }\n    }\n    finalOptions = { ...options, headers }\n    const response = await axios({\n        url: demoConfig.restServerUrl + url,\n        withCredentials: true,\n        ...finalOptions\n    })\n\n    dispatch({\n        type: HTTP_ACTIONS.ADD_NEW_HTTP_REQUEST,\n        payload: {\n            responseStatus: response.status,\n            responseHeader: response.headers,\n            responseBody: response.data,\n            url: url,\n            params: finalOptions.params ? finalOptions.params : \"\",\n            requestHeader: finalOptions.headers ? finalOptions.headers : \"\",\n            requestData: finalOptions.data ? finalOptions.data : \"\",\n            method: finalOptions.method ? finalOptions.method : \"get\"\n        }\n    })\n\n    return response\n}\n\nconst login = async (dispatch) => {\n    return await callRestApi(AUTH_URL, {\n        method: 'post',\n        data: {\n            loginMode: 8\n            // username: demoConfig.username,\n            // password: demoConfig.password\n        }\n    }, dispatch)\n}\n\nexport const loginAndResetToken = async (dispatch) => {\n    // May have error here, need to think if we can improve it later\n    const loginResponse = await login(dispatch)\n    storeAccessToken(loginResponse.headers[X_MSTR_AUTH_TOKEN.toLowerCase()])\n   \n}\n\nconst requestRetry = async (url, options, dispatch) => {\n    for (let i = 0; i < CONSTANTS.MAX_TRY_COUNT; i++) {\n        try {\n            const response = await callRestApi(url, options, dispatch)\n            return response.data\n        } catch (err) {\n            // Only retry once\n            const isLastAttempt = i > 0\n            if (!isLastAttempt && err.response.status === 401) {\n                // Relogin here, if it fails and throws err, OK\n                // Change token in session storage \n                await loginAndResetToken(dispatch)\n            }\n            else {\n                throw err\n            }\n        }\n    }\n}\n\nexport const getDatasetListByType = async (projectID, type, dispatch) => {\n    try {\n        return await requestRetry(GET_DATASET_URL, {\n            headers: {\n                [X_MSTR_PROJECT_ID]: projectID\n            },\n            params: {\n                type,\n                limit: LIMIT\n            },\n        }, dispatch)\n    }\n    catch (ex) {\n        return {\n            totalItems: 0,\n            result: []\n        }\n    }\n}\n\nexport const getDatasetDefinition = async (dataset, projectID, dispatch) => {\n    // We need to try-catch here to avoid multiple requests end unexpectly\n    try {\n        const urlPrefix = (dataset.subtype === CUBE_TYPE) ? CUBE_DEF_URL_PREFIX : REPORT_DEF_URL_PREFIX\n        const url = version + urlPrefix + dataset.id\n        return await requestRetry(url, {\n            headers: {\n                [X_MSTR_PROJECT_ID]: projectID\n            }\n        }, dispatch)\n    }\n    catch (ex) {\n        return {\n            definition: null\n       }\n    }\n}\n\nexport const getAttributeElements = async (projectId, dataset, instanceId, attributeId, dispatch) => {\n    const url = `/cubes/${dataset.id}/instance/${instanceId}/attributes/${attributeId}/elements`\n    return await requestRetry(url, {\n        headers: {\n            [X_MSTR_PROJECT_ID]: projectId\n        },\n        params: {\n            offset: 0,\n            limit: 50\n        }\n    }, dispatch)\n}\n\nexport const getObjectData =  async (dataset, projectID, instanceID, pageIdx, dispatch) => {\n    const urlPrefix = (dataset.subtype === CUBE_TYPE) ? CUBE_DEF_URL_PREFIX : REPORT_DEF_URL_PREFIX\n    const url = `${version}${urlPrefix}${dataset.id}/instances/${instanceID}` \n    \n    return await requestRetry(url, {\n        headers: {\n            [X_MSTR_PROJECT_ID]: projectID\n        },\n        params: {\n            offset: pageIdx * demoConfig.itemPerPage,\n            limit: demoConfig.itemPerPage\n        }\n    }, dispatch)\n}\n\nexport const createInstance = async (dataset, projectID, pageIdx, postBody, dispatch) => {\n    const urlPrefix = (dataset.subtype === CUBE_TYPE) ? CUBE_DEF_URL_PREFIX : REPORT_DEF_URL_PREFIX\n    const url = version + urlPrefix + dataset.id + INSTANCES\n    \n    return await requestRetry(url, {\n        method: 'post',\n        headers: {\n            [X_MSTR_PROJECT_ID]: projectID\n        },\n        params: {\n            offset: pageIdx * demoConfig.itemPerPage,\n            limit: demoConfig.itemPerPage\n        },\n        data: postBody\n    }, dispatch)\n}\n","import _ from 'lodash'\n\nexport const getProjectId = (state) => {\n  return state.ui.projectId\n}\n\nexport const getInstanceId = (state) => {\n  return state.resultTable.instanceId\n}\n\nexport const getCurrentDatasetAttributes = (state) => {\n  return getCurrentDatasetDefProperty(state, \"attributes\")\n}\n\nexport const getCurrentDatasetMetrics = (state) => {\n  return getCurrentDatasetDefProperty(state, \"metrics\")\n}\n\nconst getCurrentDatasetDefProperty = (state, propertyName) => {\n  const currentDataset = getCurrentDataset(state)\n  return (currentDataset === null)? null: currentDataset.definition.availableObjects[propertyName]\n}\n\nexport const getCurrentDataset = (state) => {\n  const {data, ui} = state.datasetList\n  let currentDataset = null \n  if (data.length > 0) {\n      currentDataset = data[ui.selectDatasetIndex]\n  }\n  return currentDataset\n}\n\nexport const getCreateInstancePostBody = (state) => {\n  let postBody = {}\n  const attributesUnselect = state.attributes.ui.unselect\n  const metricsUnselect = state.metrics.ui.unselect\n  const attributeAllSelect = Object.keys(attributesUnselect).length === 0\n  const metricAllSelect = Object.keys(metricsUnselect).length === 0\n  \n  if (!attributeAllSelect || !metricAllSelect){\n    const allAttributes = getCurrentDatasetAttributes(state)\n    const allMetrics = getCurrentDatasetMetrics(state)\n\n    postBody.requestedObjects = {\n      attributes: allAttributes.map(attribute => ({\n        id: attribute.id\n      })).filter(attribute => !(attribute.id in attributesUnselect)),\n      metrics: allMetrics.map(metric => ({\n        id: metric.id\n      })).filter(metric => !(metric.id in metricsUnselect))\n    }    \n  }\n  \n  if(state.filters&&state.filters.viewFilter.expressions){\n    postBody.viewFilter = Object.assign({},state.filters.viewFilter.expressions)\n  }\n\n  if(state.filters&&state.filters.metricLimits.expressions){\n    postBody.metricLimits = Object.assign({},state.filters.metricLimits.expressions)\n  }\n\n  const sortingRequest = state.sorting.output\n  if (sortingRequest && sortingRequest.length > 0) {\n    postBody.sorting = filterUnselectElementFromSortingOutput(sortingRequest, metricsUnselect, attributesUnselect)\n  }\n  return postBody\n}\n\nconst filterUnselectElementFromSortingOutput = (sorting, metricsUnselect, attributesUnselect) => {\n  return sorting.filter(element => {\n    if (element.type === \"attribute\" || element.type === \"form\") {\n      return !_.get(attributesUnselect, element.attribute.id, false)\n    } else {\n      return !_.get(metricsUnselect, element.metric.id, false)\n    }\n  })\n}","import {loginAndResetToken, createInstance, getAttributeElements, \n  getObjectData, getDatasetListByType, getDatasetDefinition} from './restApis'\nimport {CONSTANTS} from '../constants'\nimport {getProjectId, getInstanceId, \n  getCurrentDataset, getCreateInstancePostBody} from './stateUtils'\n\n\nexport const getDatasetListAsync = async (dispatch, getState) => {\n  // Check if we have token first\n  await loginAndResetToken(dispatch)\n\n  const state = getState()\n  const projectID = getProjectId(state)\n  const allTypes = [CONSTANTS.CUBE_TYPE, CONSTANTS.REPORT_TYPE]\n  const datasetsList = await Promise.all(allTypes.map(type => getDatasetListByType(projectID, type, dispatch)))\n  const datasetList = [...datasetsList[0].result, ...datasetsList[1].result]\n  const datasetDefList = await Promise.all(datasetList.map(dataset => getDatasetDefinition(dataset, projectID, dispatch)))\n\n  for (let i = 0; i < datasetList.length; i++) {\n      datasetList[i].definition = datasetDefList[i].definition\n  }\n  const validDatasets = datasetList.filter(dataset => dataset.definition !== null)\n  return validDatasets\n}\n\nexport const createInstanceAsync = async (dispatch, getState, pageIdx) => {\n\tconst state = getState()\n\tconst projectId = getProjectId(state)\n\tconst data = await createInstance(getCurrentDataset(state), \n\t\tprojectId, pageIdx, getCreateInstancePostBody(state), dispatch)\n\treturn data\n}\n\nexport const getObjectDataAsync = async (dispatch, getState, pageIdx) => {\n\tconst state = getState()\n  const projectId = getProjectId(state)\n  const dataset = getCurrentDataset(state)\n  const instanceId = getInstanceId(state)\n\treturn await getObjectData(dataset, projectId, instanceId, pageIdx, dispatch)\n}\n\nexport const getAttributeElementsAsync = async (dispatch, getState, attributeId) => {\n  const state = getState()\n  const projectId = getProjectId(state)\n  const dataset = getCurrentDataset(state)\n  const instanceId = getInstanceId(state)\n  return await getAttributeElements(projectId, dataset, instanceId, attributeId, dispatch)\n}\n","// import C from './constants'\n// import axios from 'axios'\nimport {httpErrorHandling} from '../../utils/utils'\nimport {createInstanceAsync, getDatasetListAsync} from '../../utils/restUtils'\nimport {DATASET_LIST_ACTIONS, RESULT_ACTIONS, MAIN_UI_ACTIONS} from '../../constants'\n\nexport const getDatasetList = () => {\n\treturn (dispatch, getState) => {\n\t\tgetDatasetsAndCreateInstance(dispatch, getState).catch(\n\t\t\thttpErrorHandling(dispatch, MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG))\n  }\n}\n\nexport const changeSelectDataset = (index) => {\n\treturn (dispatch, getState) => {\n\t\tdispatch({\n\t\t\ttype: DATASET_LIST_ACTIONS.CHANGE_SELECT_DATASET,\n\t\t\tpayload: index\n\t\t})\n\t\tcreateInstanceAndRefreshTable(dispatch, getState, 0).catch(\n\t\t\thttpErrorHandling(dispatch, MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG))\n\t}\n}\n\nconst getDatasetsAndCreateInstance = async (dispatch, getState) => {\n\tconst datasetsResult = await getDatasetListAsync(dispatch, getState)\n\tif (datasetsResult.length === 0) {\n\t\tdispatch({\n\t\t\ttype: MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG,\n\t\t\tpayload: \"Can't get a valid dataset. Please retry.\"\n\t\t})\t\n\t\treturn;\n\t}\n\tdispatch({\n\t\ttype: DATASET_LIST_ACTIONS.SET_DATASET_LIST,\n\t\tpayload: datasetsResult\n\t})\n\treturn await createInstanceAndRefreshTable(dispatch, getState, 0)\n}\n\nexport const createInstanceAndRefreshTable = async (dispatch, getState, pageIndex) => {\n\tconst data = await createInstanceAsync(dispatch, getState, pageIndex)\n\tif (data.status === 2) {\n\t\tdispatch({\n\t\t\ttype: MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG,\n\t\t\tpayload: \"This report has unanswered prompts. It is currently not supported in this demo.\"\n\t\t})\t\n\t\treturn;\n\t}\n\tdispatch({\n\t\ttype: RESULT_ACTIONS.REFRESH_RESULT_PANEL,\n\t\tpayload: data\n\t})\n\treturn data\n}","import DatasetDropList from './DatasetDropList'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {changeSelectDataset, getDatasetList} from '../actions'\n\nfunction mapStateToProps(state) {\n    const {\n        data,\n        ui\n    } = state.datasetList\n\n    return {\n        data,\n        ui\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onGetDatasetList: getDatasetList,\n        onChangeDataset: changeSelectDataset,\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DatasetDropList)","export const operators = [{ name: \"Greater\", value: \">\" }, { name: \"Less\", value: \"<\" }, { name: \"Equals\", value: \"=\" }, { name: \"NotEqual\", value: \"!=\" }, { name: \"BeginsWith\", value: \"...\" }, { name: \"Contains\", value: \"<>\" }, { name: \"Like\", value: \"...\" }]\nexport const listOptions = [{ name: \"In List\", value: \"In\" }, { name: \"Not In List\", value: \"NotIn\" }]\n\nexport const contructNewExpressionFromRawdata = (rawExpressionData)=>{\n\tconsole.log(\"rawExpressionData \", rawExpressionData.operator)\n\n\tlet expressionIndex = rawExpressionData.expressionIndex;\n\tlet isAttribute = rawExpressionData.targetObject.type === \"Attribute\" ? true : false\n\tlet targetObject = rawExpressionData.targetObject\n\tlet formName = isAttribute ? rawExpressionData.selectAttributeForm.name : \"\"\n\n\tlet isQualification = rawExpressionData.isQualification\n\tlet selectedElements = rawExpressionData.selectedElements\n\tlet selectedListOperator = rawExpressionData.selectedListOperator\n\n\n\tlet firstOperand\n\tlet secondOperand\n\tlet newExpression\n\tlet contentDisplay\n\n\tif (isQualification) {\n\t\tcontentDisplay = targetObject.name + (isAttribute ? ' @' + formName : '') + ' ' + rawExpressionData.operator + ' ' + rawExpressionData.constant\n\n\t\tif (isAttribute) {\n\t\t\tfirstOperand = {\n\t\t\t\ttype: \"form\",\n\t\t\t\tattribute: {\n\t\t\t\t\tid: targetObject.id,\n\t\t\t\t\tname: targetObject.name\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tid: rawExpressionData.selectAttributeForm.id,\n\t\t\t\t\tname: rawExpressionData.selectAttributeForm.name\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsecondOperand = {\n\t\t\t\ttype: \"constant\",\n\t\t\t\tdataType: \"Char\",\n\t\t\t\tvalue: rawExpressionData.constant\n\t\t\t}\n\n\t\t} else {\n\t\t\tfirstOperand = {\n\t\t\t\ttype: \"metric\",\t\t\t\t\n\t\t\t\tid: targetObject.id,\n\t\t\t\tname: targetObject.name\n\t\t\t}\n\n\t\t\tsecondOperand = {\n\t\t\t\ttype: \"constant\",\n\t\t\t\tdataType: \"Real\",\n\t\t\t\tvalue: rawExpressionData.constant\n\t\t\t}\n\t\t}\n\n\n\t\tnewExpression = {\n\t\t\tcontentDisplay: contentDisplay,\n\t\t\texpression: {\n\t\t\t\toperator: rawExpressionData.operator,\n\t\t\t\toperands: [\n\t\t\t\t\tfirstOperand,\n\t\t\t\t\tsecondOperand\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet selectedElementNames = selectedElements.map((element)=>{return element.name}).join(',')\n\t\t\n\t\tcontentDisplay = targetObject.name  + ' ' + selectedListOperator.name + ' ' + selectedElementNames\n\n\t\tfirstOperand = {\n\t\t\ttype: \"attribute\",\n\t\t\tid: targetObject.id,\n\t\t\tname: targetObject.name\n\t\t}\n\n\t\tsecondOperand ={\n\t\t\ttype:\"elements\",\n\t\t\telements: selectedElements\n\t\t}\n\n\t\tnewExpression = {\n\t\t\tcontentDisplay: contentDisplay,\n\t\t\texpression: {\n\t\t\t\toperator: selectedListOperator.value,\n\t\t\t\toperands: [\n\t\t\t\t\tfirstOperand,\n\t\t\t\t\tsecondOperand\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n\n\tnewExpression.expressionIndex = expressionIndex\n\tnewExpression.targetObjectId = targetObject.id\n\tnewExpression.isViewFilter =  rawExpressionData.isViewFilter\n\treturn newExpression\n}\n\nconst destructParamsFromQualificationExpression = (isViewFilter,firstOperand,secondOperand,operator,availableObjects,metricLimitTargetObjectId) =>{\n\tlet selectedIndex =0\n\tlet operatorIndex =0\n\tlet constant = ''\n\tlet selectFormIndex = 0\n\n\tlet targetObjectId\n\tlet isAttribute = (firstOperand.type !== 'metric')\n\tlet formId\n\n\tif(isViewFilter){\n\t\t\tif (isAttribute) {\n\t\t\t\t\ttargetObjectId = firstOperand.attribute.id\n\t\t\t\t\tformId = firstOperand.form.id\n\t\t\t} else {\n\t\t\t\t\ttargetObjectId = firstOperand.id\n\t\t\t}\n\t}else{\n\t\t\ttargetObjectId = metricLimitTargetObjectId\n\t}\n\n\tselectedIndex = availableObjects.findIndex((availableObject) => { return availableObject.id === targetObjectId });\n\tif (isAttribute) {\n\t\t\tselectFormIndex = availableObjects[selectedIndex].forms.findIndex((form => { return form.id === formId }))\n\t}\n\toperatorIndex = operators.findIndex(operatorElement => { return operatorElement.name === operator })\n\tconstant = secondOperand.value\n\n\treturn {\n\t\t\tselectedIndex,\n\t\t\toperatorIndex,\n\t\t\tselectFormIndex,\n\t\t\tconstant\n\t}\n}\n\nexport const destructParamsFromANExistingExpression = (state, expressionIndex, isViewFilter,availableObjects,metricLimitTargetObjectId) => {\n\tlet expression\n\tif(isViewFilter){\n\t\t\texpression = state.filters.viewFilter.expressions.operands[expressionIndex]\n\t}else{\n\t\t\texpression = state.filters.metricLimits.expressions[metricLimitTargetObjectId].operands[expressionIndex]\n\t}\n\n\tlet selectedIndex = 0\n\tlet selectFormIndex = 0\n\tlet operatorIndex = 0\n\tlet constant = ''\n\tlet isQualification = false\n\tlet selectedListOptionIndex = 0\n\tlet selectedElementIndexs = []\n\tlet isALLElementChecked = false\n\n\tlet firstOperand = expression.operands[0]\n\tlet secondOperand = expression.operands[1]\n\tlet targetObjectId\n\tlet operator = expression.operator\n\n\tif (isViewFilter) {\n\t\t\tisQualification = !(listOptions.findIndex(listOption=>{return listOption.value === operator}) >= 0)\n\n\t\t\tif (isQualification) {\n\t\t\t\t\t({selectedIndex,operatorIndex,selectFormIndex,constant}= destructParamsFromQualificationExpression(isViewFilter,firstOperand,secondOperand,operator,availableObjects,metricLimitTargetObjectId))\n\t\t\t} else {\n\t\t\t\t\ttargetObjectId = firstOperand.id;//targetobject must be an attribute\n\t\t\t\t\tselectedIndex = availableObjects.findIndex((availableObject) => { return availableObject.id === targetObjectId });\n\t\t\t\t\tselectedListOptionIndex = listOptions.findIndex(listOption => { return operator === listOption.value }) \n\t\t\t\t\tlet selectedElements = secondOperand.elements\n\t\t\t\t\tselectedElements.forEach((selectedElement) => {\n\t\t\t\t\t\t\tlet index = availableObjects[selectedIndex].elements.findIndex(element => { return element.id === selectedElement.id })\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\t\tselectedElementIndexs.push(index)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tisALLElementChecked = (selectedElementIndexs.length === availableObjects[selectedIndex].elements.length) ? true : false\n\t\t\t}\n\t}else{  \n\t\t\tisQualification = true ;//metric limit only support qualification   \n\t\t\t({selectedIndex,operatorIndex,selectFormIndex,constant} = destructParamsFromQualificationExpression(isViewFilter,firstOperand,secondOperand,operator,availableObjects,metricLimitTargetObjectId))\n\t}\n\n\treturn ({\n\t\t\tmetricLimitTargetObjectId,\n\t\t\texpressionIndex,\n\t\t\tisEditing:true,\n\t\t\tavailableObjects,\n\t\t\tisViewFilter,\n\t\t\tselectFormIndex,\n\t\t\toperatorIndex,\n\t\t\tconstant,\n\t\t\tisQualification,\n\t\t\tselectedListOptionIndex,\n\t\t\tselectedElementIndexs,\n\t\t\tisALLElementChecked,\n\t\t\tselectedIndex\n\t})\n\n}","import React from 'react'\n\n\nimport '../../../include/bootstrap'\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap'\n\nimport {operators, listOptions} from '../../../utils/filterUtils'\n\nimport './FilterEditor.scss'\n\nclass FilterEditor extends React.Component {\n    static getDerivedStateFromProps(props, state) {\n        // Reload prop when the modal dialog is hide/show \n        if (props.show !== state.show){\n            return {\n                show: props.show,\n                expressionIndex:props.expressionIndex,\n                isEditing:props.isEditing,\n                isViewFilter: props.isViewFilter,\n                selectedIndex: props.selectedIndex,\n                selectFormIndex: props.selectFormIndex,\n                operatorIndex: props.operatorIndex,\n                constant: props.constant,\n                isQualification: props.isQualification,\n                selectedListOptionIndex: props.selectedListOptionIndex,\n                selectedElementIndexs: props.selectedElementIndexs,\n                isALLElementChecked: props.isALLElementChecked,\n                isOkButtonEnable:props.isEditing\n            }\n        }\n        return state\n    }\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            show: false,\n            expressionIndex:this.props.expressionIndex,\n            isEditing:this.props.isEditing,\n            isViewFilter: this.props.isViewFilter,\n            selectedIndex: this.props.selectedIndex,\n            selectFormIndex: this.props.selectFormIndex,\n            operatorIndex: this.props.operatorIndex,\n            constant: this.props.constant,\n            isQualification: this.props.isQualification,\n            selectedListOptionIndex: this.props.selectedListOptionIndex,\n            selectedElementIndexs: this.props.selectedElementIndexs,\n            isALLElementChecked: this.props.isALLElementChecked,\n            isOkButtonEnable:this.props.isEditing\n        }\n    }\n\n    render() {\n        const availableObjects = this.props.availableObjects;\n        if(availableObjects.length === 0){\n            return <div></div>\n        }\n        \n        let isAttributeSelected = false;\n\n        let selectedIndex = this.state.selectedIndex\n\n        isAttributeSelected = (availableObjects[selectedIndex].type || \"\").toLowerCase() === \"attribute\"\n\n        const createNewExpression = () => {\n            return (\n                <div>\n                    <input type=\"text\" placeholder=\"Please input constant\" onChange={(e) => { this.ConstantValueChange(e) } } value={this.state.constant} />\n                </div>\n            );\n        }\n\n \n        const constructChooseElementsPart = () => {\n            let chooseElementPart;\n            let availableOptionsAndChooseElementPart;\n            let availableForms;\n            let availableListOptions;\n            let availableOptions;\n            if (isAttributeSelected&&this.state.isViewFilter) {\n                chooseElementPart =\n                    <div>\n                        <div className=\"grey-label\">Choose elements by</div>\n                        <DropdownButton className=\"QP__filter__editor__DropDown\" title={this.state.isQualification?'Qualification On':'Selecting in list'} id=\"dropdown-size-medium\">\n                            <MenuItem className=\"QP__filter__editor__MenuItem\" key={0} active={this.state.isQualification} eventKey={0} onSelect={(ek) => this.isQualificationSelectChange(ek)}>Qualification On</MenuItem>\n                            <MenuItem className=\"QP__filter__editor__MenuItem\" key={1} active={!this.state.isQualification} eventKey={1} onSelect={(ek) => this.isQualificationSelectChange(ek)}>Selecting in list</MenuItem>\n                        </DropdownButton>\n                    </div>\n\n                availableForms = availableObjects[this.state.selectedIndex].forms.map((form, index) =>\n                    <div className=\"custom-radio-container\" key={index}>\n                        <div className=\"custom-control custom-radio\" onClick={(e) => this.state.selectFormIndex !== index ? this.formSelectChange(index) : \"\"}>\n                             <input type=\"radio\" className=\"custom-control-input\" name=\"attributeForms\" id={'attributeForms'+ index} value={index}\n                             checked={this.state.selectFormIndex === index} readOnly/>\n                            <div className={`QP__item-icon ${this.state.selectFormIndex === index? \"qp-radio-check-icon\" : \"qp-radio-uncheck-icon\"}`}/>\n                            <span className=\"custom-control-label\" htmlFor={'attributeForms' + index} onClick={(e) => this.state.selectFormIndex !== index ? this.formSelectChange(index) : \"\"}>{form.name}</span>\n                        </div>\n                    </div>);\n\n                availableListOptions = listOptions.map((listOption, index) =>\n                    <div className=\"custom-radio-container\" key={index}>\n                        <div className=\"custom-control custom-radio\" onClick={(e) => this.state.selectedListOptionIndex !== index ? this.listOptionSelectChange(index) : \"\"}>\n                            <input type=\"radio\" className=\"custom-control-input\" name=\"listOptions\" id ={'listOptions'+index} value={index} ref = {'listOptions'+ index}\n                            checked={this.state.selectedListOptionIndex === index} readOnly/>\n                            <div className={`QP__item-icon ${this.state.selectedListOptionIndex === index? \"qp-radio-check-icon\" : \"qp-radio-uncheck-icon\"}`}/>\n                            <span className=\"custom-control-label\" htmlFor={\"listOptions\" + index}>{listOption.name}</span>\n                        </div><br />\n                    </div>);\n                if (this.state.isQualification) {\n                    availableOptions = availableForms;\n\n                } else {\n                    availableOptions = availableListOptions;\n                }\n                availableOptionsAndChooseElementPart = <div className = \"QP__filter__editor__choosePart\"><div>{chooseElementPart}</div><div className = \"QP__filter__editor__selectPart\">{availableOptions}</div></div>\n            } else {\n                availableOptionsAndChooseElementPart = <div></div>\n            }\n            return availableOptionsAndChooseElementPart\n        }\n        \n        const middlePartInFilterUI = () => {\n            if ((!this.state.isQualification)&&isAttributeSelected&&this.state.isViewFilter) {\n                const attribute = this.props.availableObjects[this.state.selectedIndex]    \n                const elements = attribute.elements\n                return (<div className=\"QP__filter-editor__middle\">\n                    {elements && <div className=\"element-list-header\" onClick={(e) => this.clickAllElements()}>\n                        <input className = \"QP__filter__editor__list__header__input\" type='checkbox' name='chooseMutltiElements' value='All' checked={this.state.isALLElementChecked} ref='AllElements' readOnly/>\n                        <div className={`QP__item-icon ${this.state.isALLElementChecked? \"qp-multi-check-icon\" : \"qp-multi-uncheck-icon\"}`}/>\n                        <div className = \"element-span-wrapper\">All</div>\n                    </div>}\n                    <div className=\"element-list\">\n                        {elements && elements.map((element, index) => {\n                            return <div key={index} className=\"element-item\" onClick={(e) => this.clickMultiElementSpan(index)}>\n                                <input className = \"QP__filter__editor__list__element__input\" type='checkbox' name='chooseMutltiElements' value={index}\n                                    checked={(this.state.selectedElementIndexs.find((selectedElementIndex) => {\n                                        return selectedElementIndex === index\n                                    })) >= 0} onChange={(e) => { this.clickMultiElementOption(index) }}\n                                    ref={element.name} readOnly/>\n                                <div className={`QP__item-icon ${(this.state.selectedElementIndexs.find((selectedElementIndex) => {\n                                    return selectedElementIndex === index\n                                })) >= 0 ? \"qp-multi-check-icon\" : \"qp-multi-uncheck-icon\"}`} />\n                                <div className = \"element-span-wrapper\">{element.name}</div>\n                            </div>\n                        })}\n                    </div>\n                </div>) \n            } else {\n                return (\n                    <div className=\"QP__filter-editor__middle qualification-on\">\n                        <div className=\"grey-label\">Based On</div>\n                        <ul id=\"operatorsUlId\" className=\"list-group\">\n                            {operators.map((operator, index) => {\n                                const selectedClass = this.state.operatorIndex === index?\"selected\":\"\"\n                                return <li className={`${selectedClass} client-list-group-item client-list-group-item-action client-li`}\n                                           key={index}\n                                           onClick={(e)=>this.onOperatorOptionclick(e) }\n                                           value={index}\n                                           tabIndex=\"1\">\n                                    {operator.name}\n                                    </li> })}\n                        </ul>\n                    </div>)\n            }\n\n        }\n\n\n\n        const rightPatrInFilterUI = () => {\n            if ((!this.state.isQualification)&&isAttributeSelected&&this.state.isViewFilter) {\n                return <div></div>\n            } else {\n\n                return (\n                    <div>\n                        <div className=\"grey-label\">Based on</div>\n                        <div>\n                            {createNewExpression()}\n                        </div>\n                    </div>)\n            }\n        }\n\n        let editTitleContent = this.state.isEditing? 'Edit':'New'\n        let titlePart = this.state.isViewFilter?'View Filter':'Metric limit'\n        return (\n            <Modal className=\"QP__filter-editor\" backdrop=\"static\" show={this.props.show}\n             onEntered={() => {this.onEntered()}}\n             onHide={() => {this.onClose()}}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                    <div className=\"dialogue-title-bar\">\n                        <h2 className=\"title-bar-text\">{`${editTitleContent} ${titlePart}`}</h2>\n                    </div>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"QP__filter-editor__body\">\n                        <div className=\"QP__filter-editor__left\">\n                            <div className=\"grey-label\">Based on</div>\n                                <DropdownButton className={`QP__filter__editor__DropDown QP__filter__editor__attribute-btn \n                                 ${(availableObjects[this.state.selectedIndex].type || \"\").toLowerCase() === \"attribute\" ? \"attribute\" : \"metric\"}`} \n                                 title={this.state.selectedIndex>=0?availableObjects[this.state.selectedIndex].name:''} id=\"dropdown-size-medium\">\n                                    {availableObjects.map(\n                                        (availableObject,index)=> \n                                        (<MenuItem className={`QP__filter__editor__MenuItem ${(availableObject.type || \"\").toLowerCase() === \"attribute\" ? \"attribute\" : \"metric\"}`}\n                                         key={index} active={index === this.state.selectedIndex} eventKey={index} onSelect={(ek) => this.targetObjectSelectChange(ek)}>\n                                          {availableObject.name}\n                                        </MenuItem>)\n                                    )}\n                                </DropdownButton>\n                                <div>\n                                    {constructChooseElementsPart()}\n                                </div>\n                            </div>\n                        {middlePartInFilterUI()}\n                        <div className=\"QP__filter-editor__right\">\n                            {rightPatrInFilterUI()}\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>                      \n                    <div>\n                        <button className=\"btn btn-primary\" disabled={!this.state.isOkButtonEnable}\n                                onClick={() => { this.onClickOK() }}>OK</button>\n                        <button className=\"btn btn-default btn-outline-secondary\" onClick={() => {this.onClose()}}>Cancel</button>                    \n                    </div>\n                </Modal.Footer>  \n            </Modal>\n        )\n    }\n\n    onOperatorOptionclick(e) {\n        this.setState({ operatorIndex: parseInt(e.target.value) })\n    }\n\n    ConstantValueChange(e) {\n        const constant = e.target.value\n        let isOkButtonEnable = true\n        if(constant.length === 0){\n            isOkButtonEnable = false\n        }\n\n        this.setState({ constant, isOkButtonEnable})\n    }\n\n    targetObjectSelectChange(e){\n        this.setState({ \n            selectedIndex: e,\n            isQualification:true\n         });\n    }\n\n    formSelectChange(index) {\n        this.setState({ selectFormIndex: index });\n    }\n\n\n    isQualificationSelectChange(e) {\n        if(e===0){\n            this.setState({ isQualification: true });\n        } else{\n            this.setState({ isQualification: false });\n            this.getAttributeElements(true)\n        }\n    }\n\n    listOptionSelectChange(index) {\n        this.setState({ selectedListOptionIndex: index })\n    }\n\n    getCheckBoxElementName(index){\n        const attribute = this.props.availableObjects[this.state.selectedIndex]\n        return attribute.elements[index].name;\n    }\n    clickMultiElement(index,needCheck){\n        let newSelectedElementIndexs\n\n        newSelectedElementIndexs = this.state.selectedElementIndexs.filter(selectElement => selectElement !== index);\n        if (needCheck) {\n            newSelectedElementIndexs = [...newSelectedElementIndexs, index];\n        } else{\n            if(this.state.isALLElementChecked){\n                this.setState({\n                    isALLElementChecked:false\n                })\n            }\n        }\n\n        this.setState({ selectedElementIndexs: newSelectedElementIndexs})\n        let isOkButtonEnable = true\n        if(newSelectedElementIndexs.length===0){\n            isOkButtonEnable = false\n        }\n        this.setState({isOkButtonEnable})\n    }\n\n    clickMultiElementSpan(index){\n        this.clickMultiElement(parseInt(index,10),!this.refs[this.getCheckBoxElementName(parseInt(index,10))].checked)\n    }\n\n    clickMultiElementOption(index) {\n        this.clickMultiElement(parseInt(index,10),this.refs[this.getCheckBoxElementName(parseInt(index,10))].checked)\n    }\n\n    clickAllElements(){\n       if(!this.state.isALLElementChecked){\n           let newSelectedElementIndexs=[];\n           const elements = this.props.availableObjects[this.state.selectedIndex].elements\n           elements.forEach((element,index)=>{\n               newSelectedElementIndexs.push(index)\n           })\n          this.setState({\n            isALLElementChecked: true,\n            selectedElementIndexs:newSelectedElementIndexs,\n            isOkButtonEnable:true\n          })\n\n       }else{\n           this.setState({\n             isALLElementChecked: false,\n             selectedElementIndexs:[],\n             isOkButtonEnable:false\n           })\n       }\n\n    }\n\n    getAttributeElements(changingToSelectInList) {\n        let availableObjects = this.props.availableObjects;\n        let isAttributeSelected = false;\n\n        let selectedIndex = this.state.selectedIndex\n\n        isAttributeSelected = (availableObjects[selectedIndex].type || \"\").toLowerCase() === \"attribute\" ? true : false\n\n        if (isAttributeSelected && (changingToSelectInList || !this.state.isQualification) && !availableObjects[selectedIndex].elements){\n            this.props.onGetAttributeElement(availableObjects[selectedIndex].id)\n        }\n    }\n\n    onEntered(){\n        this.getAttributeElements()\n    }\n\n    onClose(){\n        this.props.handleCloseEditor()\n    }\n\n    onClickOK(){\n        this.onClickAddOrModifyExpression()\n        this.onClose()\n    }\n\n    onClickAddOrModifyExpression(){       \n        let availableObjects = this.props.availableObjects;\n        let selectedIndex = this.state.selectedIndex      \n\n        let selectedElements = []\n        let isAttributeSelected= (availableObjects[selectedIndex].type || \"\").toLowerCase() === \"attribute\" ? true : false\n\n\n        this.state.selectedElementIndexs.forEach((selectedElementIndex)=>{selectedElements.push(availableObjects[selectedIndex].elements[selectedElementIndex])})\n\n        //in the metric limit expression edit condition,the targetObject and metricLimitTargetObject can be different\n        let rawExpessionData = {\n            operator: operators[this.state.operatorIndex].name,\n            targetObject: availableObjects[selectedIndex],\n            selectAttributeForm: isAttributeSelected ? availableObjects[selectedIndex].forms[this.state.selectFormIndex] : 0,\n            constant: this.state.constant,\n            isQualification: this.state.isQualification,\n            selectedElements: selectedElements,\n            selectedListOperator: listOptions[this.state.selectedListOptionIndex],\n            expressionIndex: this.state.expressionIndex,\n            isViewFilter:this.state.isViewFilter,\n            metricLimitTargetObjectId:this.props.metricLimitTargetObjectId\n        }\n\n        if(this.state.isEditing){\n            this.props.onModifyExpression(rawExpessionData)\n        }else{\n            this.props.onAddNewExpression(rawExpessionData)\n        }\n\n    }\n\n}\n\nexport default FilterEditor\n","import {createInstanceAsync, getAttributeElementsAsync} from '../../utils/restUtils'\nimport {httpErrorHandling} from '../../utils/utils'\nimport {contructNewExpressionFromRawdata} from '../../utils/filterUtils'\n\nimport {CONSTANTS, FILTER_ACTIONS, MAIN_UI_ACTIONS, RESULT_ACTIONS} from '../../constants'\n\n// let rawExpessionData = {\n// \toperator: this.state.operator,\n// \ttargetObject: availableObjects[this.state.selectedIndex],\n// \tselectAttributeForm: availableObjects[this.state.selectedIndex].forms[this.state.selectFormIndex],\n// \tconstant: this.state.constant\n// }\nexport const getAttributeElement = (attributeId) => {\n\treturn (dispatch, getState) => {\n\t\tgetAttributeElementWithRetry(dispatch, getState, attributeId).catch(\n\t\t\thttpErrorHandling(dispatch, MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG))\n\t}\n}\n\n\nconst getAttributeElementWithRetry = async (dispatch, getState, attributeId) => {\n\tfor (let i = 0; i < CONSTANTS.MAX_TRY_COUNT; i++) {\n\t\ttry {\n\t\t\tconst elements = await getAttributeElementsAsync(dispatch, getState, attributeId)\n\t\t\tdispatch({\n\t\t\t\ttype: FILTER_ACTIONS.MODIFY_ATTRIBUTE_ELEMENTS,\n\t\t\t\tpayload: {\n\t\t\t\t\tattributeId,\n\t\t\t\t\tdata: elements\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn elements\n\t\t} catch (err) {\n\t\t\t// Only retry once\n\t\t\tconst isLastAttempt = i > 0\n\t\t\tif (!isLastAttempt && err.response.status === 404) {\n\t\t\t\t// Re-create a instance here\n\t\t\t\tconst data = await createInstanceAsync(dispatch, getState, 0)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: RESULT_ACTIONS.REFRESH_INSTANCE_ID,\n\t\t\t\t\tpayload: data\n\t\t\t\t})\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport const deleteAnExpression = (index,isViewFilter,targetObjectId) => {\n\treturn {\n\t\ttype: FILTER_ACTIONS.DELETE_AN_EXPRESSION,\n\t\tpayload: {\n\t\t\tindex,\n\t\t\tisViewFilter,\n\t\t\ttargetObjectId\n\t\t}\n\t}\n}\n\n/*\n\tlet rawExpessionData = {\n\toperator: this.state.operator,\n\ttargetObject: availableObjects[this.state.selectedIndex],\n\tselectAttributeForm: isAttributeSelected ? availableObjects[this.state.selectedIndex].forms[this.state.selectFormIndex] : 0,\n\tconstant: this.state.constant,\n\tisQualification: this.state.isQualification,\n\tselectedElements: selectedElements,\n\tselectedListOperator: listOptions[selectedListOptionIndex].value\n}\n*/\nexport const addNewExpression = (rawExpressionData) => {\n\treturn {\n\t\ttype: FILTER_ACTIONS.ADD_NEW_EXPRESSION,\n\t\tpayload: contructNewExpressionFromRawdata(rawExpressionData)\n\t}\n}\n\nexport const modifyExpression = (rawExpressionData) => {\n\treturn {\n\t\ttype: FILTER_ACTIONS.MODIFY_EXPRESSION,\n\t\tpayload: contructNewExpressionFromRawdata(rawExpressionData)\n\t}\n}\n\nexport const clearAllFilterExpressions = (isViewFilter) =>{\n\treturn {\n\t\ttype: FILTER_ACTIONS.CLEAR_ALL_FILTER_EXPRESSIONS,\n\t\tpayload:isViewFilter\n\t}\n}\n","import FilterEditor from './FilterEditor'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { addNewExpression, modifyExpression, getAttributeElement } from '../actions'\nimport { getCurrentDataset } from '../../../utils/stateUtils';\nimport { destructParamsFromANExistingExpression } from '../../../utils/filterUtils'\n\n\nfunction mapStateToProps(state, props) {\n\n    let selectFormIndex\n    let operatorIndex\n    let constant\n    let isQualification\n    let selectedListOptionIndex\n    let selectedElementIndexs\n    let isALLElementChecked\n    let metricLimitTargetObjectId = ''\n\n\n    const isViewFilter = props.isViewFilter || false\n \n\n    let currentDataset = getCurrentDataset(state)\n    let availableObjects = [...currentDataset.definition.availableObjects.attributes,...currentDataset.definition.availableObjects.metrics]\n\n    if(!isViewFilter){ //metricLimit only support on metric object \n        availableObjects = availableObjects.filter((availableObject)=>{return availableObject.type==='metric'})\n    }\n\n    if(props.targetObjectId){\n        metricLimitTargetObjectId = props.targetObjectId //target objectid just used in metric limits since metric limit 's json format is different with view filter\n        if(!isViewFilter){\n            availableObjects = availableObjects.filter((availableObject)=>{return availableObject.id === metricLimitTargetObjectId})\n        }\n    }\n    console.log(props.expressionIndex)\n    if (props.expressionIndex !== undefined) {\n        //editor an existing expression\n        let expressionIndex = parseInt(props.expressionIndex, 10)\n        let result = destructParamsFromANExistingExpression(state, expressionIndex, isViewFilter,availableObjects,metricLimitTargetObjectId)\n        result.show = props.show\n        result.needChange = props.needChange\n        console.log(\"result:\", result)\n        return result\n    } else {\n        // add an new expression\n        selectFormIndex = 0\n        operatorIndex = 0\n        constant = ''\n        isQualification = isViewFilter?isQualification: true\n        selectedListOptionIndex = 0\n        selectedElementIndexs = []\n        isALLElementChecked = false\n\n        //isEditing meaning here is adding an new expression or modify an exsting expression\n        return ({\n            needChange: props.needChange,\n            show: props.show,\n            expressionIndex:-1,\n            isEditing:false,\n            availableObjects,\n            isViewFilter,\n            selectedIndex:0,\n            selectFormIndex,\n            operatorIndex,\n            constant,\n            isQualification,\n            selectedListOptionIndex,\n            selectedElementIndexs,\n            isALLElementChecked\n        })\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onAddNewExpression: addNewExpression,\n        onModifyExpression: modifyExpression,\n        onGetAttributeElement: getAttributeElement\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)","import React from 'react'\n\nimport '../../../include/bootstrap'\nimport FilterEditorContainer from './FilterEditorContainer';\n\nimport './FilterSummary.scss'\n\nclass FilterSummary extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditorModal: false,\n            isViewFilter: this.props.isViewFilter,\n            viewFilterSummary: this.props.viewFilterSummary,\n            metricLimitSummary: this.props.metricLimitSummary\n        }   \n    }\n\n    \n\n    render() {\n        let isViewFilter = this.state.isViewFilter\n        let summary = isViewFilter ? this.props.viewFilterSummary : this.props.metricLimitSummary\n        \n        const handleShowEditor = (expressionIndex, targetObjectId) => {\n            this.setState({ \n                showEditorModal: true,\n                expressionIndex,\n                targetObjectId\n            });\n        }\n\n        const handleCloseEditor = () => {\n            this.setState({ \n                showEditorModal: false,\n                expressionIndex: undefined\n            })\n        }\n\n        const handleDeleteExpression = (event, index, isViewFilter, metricId) => {\n            event.stopPropagation()\n            this.props.onDeleteAnExpression(index, isViewFilter, metricId)\n        }\n\n        const summaryContentUI = () => {\n            if (this.state.isViewFilter) {\n                return (summary.map((expressionContent, index) =>\n                     <div key={index} className=\"filter-list-item\" onClick={() => {handleShowEditor(index, '000')}}>\n                        <div className=\"filter-list-item-content\">{expressionContent} </div>\n                        <span\n                            onClick={(evt) => handleDeleteExpression(evt, index, isViewFilter, '000')} \n                            className=\"filter-list-item-close QP__delete__icon\">\n                        </span>\n                    </div>\n                 ))\n            }else{\n                let uiResult = [];\n                for(let metricId in summary){\n                    uiResult.push(summary[metricId].map((metricIdSummaryline, index)=>\n                     (<div key={metricId+index} className='filter-list-item' onClick={() => {handleShowEditor(index, metricId)}}>\n                        <div className=\"filter-list-item-content\">{metricIdSummaryline}</div>\n                        <span\n                            onClick={(evt) => handleDeleteExpression(evt, index, isViewFilter, metricId)}\n                            className=\"filter-list-item-close QP__delete__icon\">\n                        </span>\n                     </div>)))\n                }\n                return uiResult\n            }\n        }\n                \n        return (\n            <div className=\"filter-list-div\">\n                <div className=\"filter-title-div\">\n                    <div className=\"filter-title-new\" onClick={() => {handleShowEditor()}}>New</div>\n                    <span className=\"filter-title-clear\" onClick = {() => {this.props.onClearAllFilterExpressions(isViewFilter)}}>Clear All</span>\n                </div>\n                <div className=\"filter-list-list\">\n                    {summaryContentUI()}\n                </div>\n                <FilterEditorContainer isViewFilter={isViewFilter}\n                 show={this.state.showEditorModal} handleCloseEditor={handleCloseEditor}\n                 expressionIndex={this.state.expressionIndex}\n                 targetObjectId={this.state.targetObjectId}\n                 needChange={this.state.needChange}\n                 />\n            </div>\n        )\n    }\n\n\n}\n\nexport default FilterSummary\n","import FilterSummary from './FilterSummary'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {deleteAnExpression, clearAllFilterExpressions} from '../actions'\n\nfunction mapStateToProps(state) {\n    let viewFilterSummary = []\n    let metricLimitSummary = []\n    if(state.filters){\n        viewFilterSummary= state.filters.viewFilter.summary\n        metricLimitSummary = state.filters.metricLimits.summary\n    }\n\n    return {\n        viewFilterSummary,\n        metricLimitSummary\n    }\n\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onDeleteAnExpression: deleteAnExpression,\n        onClearAllFilterExpressions: clearAllFilterExpressions\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSummary)","import React from 'react'\nimport _ from 'lodash'\n\nimport '../../../include/bootstrap'\nimport './SortingListGroup.scss'\n\nimport { DropdownButton, ListGroup, ListGroupItem, MenuItem, OverlayTrigger, Tooltip } from 'react-bootstrap'\n\nclass SortingListGroup extends React.Component {\n\n    onSortingElemetsSelectChange(elementNum, eventKey) {\n        const { ui, onChangeSortingElement, onChangeSortingOutputData, onChangeSortingChoice } = this.props\n        const { sorting } = ui\n        sorting.forEach(\n            (d, i) => {\n                if (i === elementNum) {\n                    if (eventKey === d.sortby) {\n                        return\n                    }\n                    else {\n                        onChangeSortingElement(elementNum, eventKey)\n                        //give a default value for sorting choice\n                        onChangeSortingChoice(elementNum, 0)\n                        //change output data\n                        onChangeSortingOutputData(elementNum)\n                        //add new dropdown box\n                        if (elementNum === ui.sortingDropdownNum - 1) {\n                            this.onAddDropdownAction()\n                        }\n                    }\n                }\n            }\n        )\n    }\n    onSortingChoiceSelectChange(elementNum, eventKey) {\n        const { ui, onChangeSortingChoice, onChangeSortingOutputData } = this.props\n        const { sorting } = ui\n        sorting.forEach(\n            (data, i) => {\n                if (i === elementNum) {\n                    if (eventKey === data.order) {\n                        return\n                    }\n                    else {\n                        onChangeSortingChoice(elementNum, eventKey)\n                        onChangeSortingOutputData(elementNum)\n                    }\n                }\n            }\n        )\n    }\n    onAddDropdownAction() {\n        const { onAddSortingDropdown } = this.props\n        onAddSortingDropdown(this.props.ui.sortingDropdownNum + 1)\n    }\n    getSortingElementTitle(index) {\n        const { sorting } = this.props.ui\n        if (this.hasSelectElement(index)) {\n            return this.getElementName(this.props.data[sorting[index].sortby])\n        } else {\n            return this.props.data.length === 0 ? \"Loading data\" : \"\"\n        }\n    }\n    isCurrentIndexSelected(index) {\n        const { sorting } = this.props.ui\n        if (this.hasSelectElement(index)) {\n            return this.isElementSelected(this.props.data[sorting[index].sortby])\n        } else {\n            //no element select, show blank dropdown, no need display warning\n            return true\n        }\n    }\n    getSortingChoiceTile(index) {\n        const { sorting } = this.props.ui\n        if (sorting[index].order === 0) {\n            return \"Ascending\"\n        } else if (sorting[index].order === 1) {\n            return \"Descending\"\n        } else {\n            return \"\"\n        }\n    }\n    isAttribute(index) {\n        const { data } = this.props\n        return data[index].type === \"attribute\"\n    }\n    hasSelectElement(index) {\n        const { sorting } = this.props.ui\n        return sorting[index].sortby >= 0\n    }\n    useDefaultSortingOrder(index) {\n        const { sorting } = this.props.ui\n        if (this.hasSelectElement(index) && this.isAttribute(sorting[index].sortby)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    getElementName(element) {\n        if (element.type === \"attribute\") {\n            return element.attribute.name;\n        } else if (element.type === \"metric\") {\n            return element.metric.name;\n        } else if (element.type === \"form\") {\n            return element.attribute.name + \"-\" + element.form.name\n        }\n    }\n    onDeleteDropdownButtonClick(index) {\n        const { onDeleteSortingDropdown } = this.props\n        onDeleteSortingDropdown(index)\n    }\n    onClearSortingStateButtonClick() {\n        const { onClearSortingState } = this.props\n        onClearSortingState()\n    }\n\n    isElementSelected(element) {\n        const { attributes, metrics } = this.props\n        if (element.type === \"attribute\" || element.type === \"form\") {\n            return !_.get(attributes, `ui.unselect.${element.attribute.id}`, false)\n        } else {\n            return !_.get(metrics, `ui.unselect.${element.metric.id}`, false)\n        }\n    }\n    render() {\n        const { sorting, sortingDropdownNum } = this.props.ui\n        const { data } = this.props\n        const selectedElement = this.props.ui.sorting.map(e => e.sortby)\n        const elementDropDownIsDisabled = this.props.data.length === 0\n        return (\n            <div className=\"QP__sorting\">\n                <div className=\"QP__conditions__title\">Advance Sort</div>\n                <div className=\"QP__sorting__table\">\n                    <div className=\"QP__sorting__table__index\">\n                        <div className=\"QP__sorting__table__order\">Order</div>\n                        <div className=\"QP__sorting__table__sort\">Sort by</div>\n                        <div className=\"QP__sorting__table__clear\" onClick={e => this.onClearSortingStateButtonClick()}>Clear All</div>\n                    </div>\n                    <div className=\"QP__sorting__table__content\">\n                        <ListGroup className=\"QP__sorting__table__row\">\n                            {[...Array(sortingDropdownNum).keys()].map(i => {\n                                const selected = this.isCurrentIndexSelected(i)\n                                return <ListGroupItem key={i} className=\"QP__sorting__table__row__item\">\n                                    <div className=\"QP__sorting__table__row__index\">{i + 1}</div>\n                                    <div className=\"QP__sorting__table__row__element_group\">\n                                        <DropdownButton className={selected ? \"QP__sorting__table__row__elementButton\" : \"QP__sorting__table__row__unselected__elementButton\"} dropup title={this.getSortingElementTitle(i)} disabled={elementDropDownIsDisabled} id=\"dropdown-size-medium\">\n                                            {\n                                                data\n                                                    .map((current, j) => {\n                                                        return <MenuItem className={this.isElementSelected(current) ? \"QP__sorting__table__row__elementMenu__Item\" : \"QP__sorting__table__row__elementMenu__Unselected__Item\"} key={j} active={j === sorting[i].sortby} eventKey={j} onSelect={(ek) => this.onSortingElemetsSelectChange(i, ek)}>{this.getElementName(current)}</MenuItem>\n                                                    })\n                                                    .filter((element, index) => {\n                                                        return !selectedElement.includes(index)\n                                                    })\n                                            }\n                                        </DropdownButton>\n                                    </div>\n                                    <div className=\"QP__sorting__table__row__sorting_group\">\n                                        {this.useDefaultSortingOrder(i) ?\n                                            <div className={selected ? \"QP__sorting__table__row__default\" : \"QP__sorting__table__row__unselected__default\"}>Default Order</div>\n                                            :\n                                            <DropdownButton className={selected ? \"QP__sorting__table__row__sortingButton\" : \"QP__sorting__table__row__unselected__sortingButton\"} dropup title={this.getSortingChoiceTile(i)} id=\"dropdown-size-medium\" disabled={sorting[i].sortby < 0 || data[sorting[i].sortby].type === \"attribute\"} >\n                                                {[...Array(2).keys()].map(j => {\n                                                    return <MenuItem className=\"QP__sorting__table__row__sortingMenu__Item\" key={j} active={j === sorting[i].order} eventKey={j} onSelect={(ek) => this.onSortingChoiceSelectChange(i, ek)}>{j === 0 ? \"Ascending\" : \"Descending\"}</MenuItem>\n                                                })}\n                                            </DropdownButton>\n                                        }\n\n                                    </div>\n                                    {selected ? \"\" :\n                                        <OverlayTrigger\n                                            key=\"top\"\n                                            placement=\"top\"\n                                            overlay={\n                                                <Tooltip id=\"tooltip-top\">\n                                                    Object is unselected\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <div className=\"QP__warning__icon warning\"></div>\n                                        </OverlayTrigger>\n                                    }\n                                    {/* only check the last one */}\n                                    {this.hasSelectElement(i) ? <div className=\"QP__sorting__table__row__delete QP__delete__icon\" onClick={(e) => this.onDeleteDropdownButtonClick(i)}></div> : \"\"}\n                                </ListGroupItem>\n                            })}\n                        </ListGroup>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SortingListGroup","import { SORT_ACTIONS } from '../../constants'\n\nexport const changeSortingElement = (dropDownIndex, subIndex) => {\n    return {\n        type: SORT_ACTIONS.CHANGE_SORTING_ELEMENT,\n        payload: { dropDownIndex: dropDownIndex, subIndex: subIndex }\n    }\n}\n\nexport const changeSortingChoice = (dropDownIndex, subIndex) => {\n    return {\n        type: SORT_ACTIONS.CHANGE_SORTING_CHOICE,\n        payload: { dropDownIndex: dropDownIndex, subIndex: subIndex }\n    }\n}\n\nexport const addSortingDropdown = (dropDownNum) => {\n    return {\n        type: SORT_ACTIONS.ADD_SORTING_DROPDOWN,\n        payload: dropDownNum\n    }\n}\n\nexport const changeSortingData = (output) => {\n    return {\n        type: SORT_ACTIONS.CHANGE_SORTING_DATA,\n        payload: output\n    }\n}\n\nexport const deleteSortingDropdown = (index) => {\n    return {\n        type: SORT_ACTIONS.DELETE_SORTING_DROPDOWN,\n        payload: index\n    }\n}\n\nexport const clearSortingState = () => {\n    return {\n        type: SORT_ACTIONS.CLEAR_SORTING_STATE,\n        payload: \"\"\n    }\n}\n","import SortingListGroup from './SortingListGroup'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { changeSortingElement, changeSortingChoice, addSortingDropdown, changeSortingData, deleteSortingDropdown, clearSortingState } from '../actions'\n\n// {\n//     type: \"form\",\n//     order: \"descending\",\n//     id: \"8D679D3711D3E4981000E787EC6DE8A4\",\n//     name: \"Category\",\n//     form: {\n//         id: \"CCFBE2A5EADB4F50941FB879CCF1721C\",\n//         name: \"DESC\"\n//     }\n// },\n// {\n//     type: \"metric\",\n//     id: \"7FD5B69611D5AC76C000D98A4CC5F24F\",\n//     name: \"Cost\",\n//     order: \"descending\"\n// }\n\nfunction mapStateToProps(state) {\n    const {\n        output,\n        ui,\n        data\n    } = state.sorting\n    return {\n        output: output,\n        data: data,\n        ui: ui,\n        metrics: state.metrics,\n        attributes: state.attributes\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onChangeSortingElement: changeSortingElement,\n        onChangeSortingChoice: changeSortingChoice,\n        onAddSortingDropdown: addSortingDropdown,\n        onChangeSortingOutputData: changeSortingData,\n        onDeleteSortingDropdown: deleteSortingDropdown,\n        onClearSortingState: clearSortingState,\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingListGroup)","import React from 'react'\nimport JSONPretty from 'react-json-pretty'\nimport './HttpBoard.scss'\nimport {getQueryString} from '../../../utils/utils'\n\nconst TAB_HEADER = ['Headers', 'Response']\n\nclass HttpBoard extends React.Component {\n    componentDidUpdate() {\n   \n    }\n\n    selectRequest(index) {\n        if(this.props.ui.selectRequestIndex === index) {\n            return\n        }\n        this.props.onSelectRequest(index)\n    }\n\n    selectDetailTab(index) {\n        if(this.props.ui.selectDetailTab === index) {\n            return\n        }\n        this.props.onSelectDetailTab(index)\n    }\n\n    generateHeadersTabContent(request) {\n        return <div className=\"QP__httpBoard__headers\">\n            <div className=\"headers-lv-one\">General</div>\n            <div className=\"headers-lv-two\">\n                <span className=\"headers-lv-two__title\">URL:</span>\n                {request.url + getQueryString(request.params)}\n            </div>\n            <div className=\"headers-lv-two\">\n                <span className=\"headers-lv-two__title\">Method:</span>\n                {request.method.toUpperCase()}\n            </div>\n            <div className=\"headers-lv-one\">Request Headers</div>\n                {request.requestHeader && \n                    Object.keys(request.requestHeader).map((headerKey) => {\n                        return <div key={headerKey} className=\"headers-lv-two\">\n                            <span className=\"headers-lv-two__title\">{headerKey}:</span>\n                            {request.requestHeader[headerKey]}\n                        </div>\n                    })    \n                }\n            \n            <div className=\"headers-lv-one\">Request Body</div> \n            {request.requestData && <JSONPretty json={request.requestData}></JSONPretty>}\n        </div>\n    }\n\n    generateResponseTabContent(request) {\n        return <JSONPretty json={request.responseBody}></JSONPretty>\n    }\n\n    render() {\n        const {\n            data, \n            ui\n        } = this.props\n        const {selectRequestIndex, selectDetailTab} = ui\n        const hasSelectedOneRequest = (selectRequestIndex !== undefined)\n        const getTabSelectedClass = (tabIndex) => {\n            return (selectDetailTab === tabIndex) ? \"selected\" : \"unselected\"\n        }\n\n        // console.log(JSON.stringify(data))\n\n        return (\n            <div className=\"QP__httpBoard\">\n                <div className={`QP__httpBoard__request-urls ${hasSelectedOneRequest ? \"\" : \" url-only\"}`}>\n                    <div className=\"QP__httpBoard__title QP__httpRequests\">\n                        <div>HTTP Requests</div>\n                        <div className=\"QP__httpBoard__title__clear\"\n                         onClick={()=>this.props.onClearRequests()}>Clear All</div>\n                    </div>\n                    <div className=\"QP__httpBoard__content\">\n                    {\n                        data.map((e, index) => {\n                            const selectClass = (index === selectRequestIndex)?\"selected\":\"\"\n                            return (<div key={index} ref={(lastUrlItem) => {if(index === data.length - 1){this.lastUrlItem = lastUrlItem}}} \n                                onClick={() => this.selectRequest(index)}\n                                className={`QP__httpBoard__url-list-item ${selectClass}`}>\n                                    {`${e.method.toUpperCase()} ${e.url}${getQueryString(e.params)}`}\n                                </div>)\n                        })\n                    }\n                    </div>    \n                </div>\n                {hasSelectedOneRequest && <div className=\"QP__httpBoard__request-details\">\n                    <div className=\"QP__httpBoard__title\">\n                        {!hasSelectedOneRequest && <div>Details</div>}\n                        {hasSelectedOneRequest && \n                            TAB_HEADER.map((headerText, index) => {\n                                return <div key={index} onClick={() => this.selectDetailTab(index)}\n                                className={`QP__httpBoard__title-detail-tab ${getTabSelectedClass(index)}`}>{headerText}</div>\n                            })\n                        }\n                    </div>\n                    {hasSelectedOneRequest && <div className=\"QP__httpBoard__content\">\n                        { (selectDetailTab === 0) && this.generateHeadersTabContent(data[selectRequestIndex]) }\n                        { (selectDetailTab === 1) && data[selectRequestIndex].responseBody &&\n                            this.generateResponseTabContent(data[selectRequestIndex]) }\n                    </div>}\n                </div>}\n            </div>\n        )\n    }\n\n}\n\nexport default HttpBoard","import {HTTP_ACTIONS} from '../../constants'\n\n\nexport const addNewHttpRequest = (data) => {\n\treturn {\n\t\ttype: HTTP_ACTIONS.ADD_NEW_HTTP_REQUEST,\n\t\tpayload: data\n\t}\n}\n\nexport const clearRequests = () => {\n\treturn {\n\t\ttype: HTTP_ACTIONS.CLEAR_REQUESTS\n\t}\n}\n\nexport const selectRequest = (index) => {\n\treturn {\n\t\ttype: HTTP_ACTIONS.SELECT_REQUEST,\n\t\tpayload: index\n\t}\n}\n\nexport const selectDetailTab = (index) => {\n\treturn {\n\t\ttype: HTTP_ACTIONS.SELECT_DETAIL_TAB,\n\t\tpayload: index\n\t}\n}","import HttpBoard from './HttpBoard'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { clearRequests, selectRequest, selectDetailTab} from '../actions'\n\n\nfunction mapStateToProps(state) {\n    const {\n        data,\n        ui\n    } = state.http\n    return {\n        data,\n        ui\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onSelectRequest: selectRequest,\n        onSelectDetailTab: selectDetailTab,\n        onClearRequests: clearRequests\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpBoard)\n","import React from 'react'\n\nimport './ItemList.scss'\n\nconst ItemList = ({\n  items,\n  unselect,\n  isAttributeList,\n  onChangeItemSelection,\n  onChangeAllSelection,\n}) => {\n\n  const changeAllSelection = () => {\n    const currentAllSel = Object.keys(unselect).length === 0\n    onChangeAllSelection(!currentAllSel, items)\n  }\n  const categoryIconClass = (isAttributeList) ? 'qp-attribute-icon' : 'qp-metric-icon'\n\n  return (\n    <div className=\"QP__items\">\n      {(items.length > 0) && <div className=\"QP__item QP__items__selectAll\" onClick={()=>{changeAllSelection()}}>\n        <input readOnly type=\"checkbox\" checked={Object.keys(unselect).length === 0}/>\n        <div className={`QP__item-icon ${(Object.keys(unselect).length === 0)? \"qp-multi-check-icon\" : \"qp-multi-uncheck-icon\"}`}/>\n        <div className=\"QP__item-all-text\">All</div>\n      </div>}\n      <div className=\"QP__items-list\">\n      {\n        items.map(item => \n          (<div className=\"QP__item\" key={item.id} onClick={()=>{onChangeItemSelection(item.id)}}>\n            <input readOnly type=\"checkbox\" checked={!(item.id in unselect)}/>\n            <div className={`QP__item-icon ${!(item.id in unselect)? \"qp-multi-check-icon\" : \"qp-multi-uncheck-icon\"}`}/>\n            <div className={`QP__item-category-icon ${categoryIconClass}`} />\n            <div className=\"QP__item-name\">{item.name}</div>\n          </div>))\n      }\n      </div>\n    </div>\n  )\n}\n\nexport default ItemList","import {ATTRIBUTES_ACTIONS} from '../../constants'\n\nexport const toggleAttributeSelection = (attributeId) => {\n\treturn {\n\t\ttype: ATTRIBUTES_ACTIONS.TOGGLE_ATTRIBUTE_SELECTION,\n\t\tpayload: attributeId\n\t}\n}\n\nexport const toggleAttributeAllSelection = (select, attributes) => {\n\treturn {\n\t\ttype: ATTRIBUTES_ACTIONS.TOGGLE_ALL_ATTRIBUTES,\n\t\tpayload: {\n\t\t\tattributes,\n\t\t\tselect\n\t\t}\n\t}\n}","import ItemList from '../../../common/components/ItemList'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {toggleAttributeSelection, toggleAttributeAllSelection} from '../actions'\nimport {getCurrentDatasetAttributes} from '../../../utils/stateUtils'\n\nfunction mapStateToProps(state) {\n    const attributes = getCurrentDatasetAttributes(state)\n    const unselect = state.attributes.ui.unselect\n    \n    return {\n        items: attributes,\n        unselect,\n        isAttributeList: true\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onChangeItemSelection: toggleAttributeSelection,\n        onChangeAllSelection: toggleAttributeAllSelection\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList)","import {METRIC_ACTIONS} from '../../constants'\n\nexport const toggleMetricSelection = (metricId) => {\n\treturn {\n\t\ttype: METRIC_ACTIONS.TOGGLE_METRIC_SELECTION,\n\t\tpayload: metricId\n\t}\n}\n\nexport const toggleMetricAllSelection = (select, metrics) => {\n\treturn {\n\t\ttype: METRIC_ACTIONS.TOGGLE_ALL_METRICS,\n\t\tpayload: {\n\t\t\tmetrics,\n\t\t\tselect\n\t\t}\n\t}\n}","import ItemList from '../../../common/components/ItemList'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {toggleMetricSelection, toggleMetricAllSelection} from '../actions'\nimport {getCurrentDatasetMetrics} from '../../../utils/stateUtils'\n\nfunction mapStateToProps(state) {\n    const metrics = getCurrentDatasetMetrics(state)\n    const unselect = state.metrics.ui.unselect\n    \n    return {\n        items: metrics,\n        unselect,\n        isAttributeList: false\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onChangeItemSelection: toggleMetricSelection,\n        onChangeAllSelection: toggleMetricAllSelection\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList)","import React from 'react'\n\nimport AttributesContainer from './attributes/components/AttributesContainer'\nimport MetricsContainer from './metrics/components/MetricsContainer'\n\n\nimport './AttributeMetricArea.scss'\n\nconst AttributeMetricArea = () => {\n  return (\n    <div className=\"QP__attributes-metrics-area\">\n      <div className=\"QP__attributes-metrics-container\">\n        <div className=\"QP__conditions__title\">Attributes</div>\n        <div className=\"QP__attributes-metrics-area__list\">\n          <AttributesContainer />\n        </div>\n      </div>\n      <div className=\"QP__attributes-metrics-container\">\n        <div className=\"QP__conditions__title\">Metrics</div>\n        <div className=\"QP__attributes-metrics-area__list\">\n          <MetricsContainer />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AttributeMetricArea","import React from 'react'\nimport Chart from \"react-google-charts\"\n\nimport './ResultTable.scss'\n\nconst VALID_POSITIVE_NUM_REGEX = /^([1-9][0-9]*)$/\nconst TIMEOUT = 500\n\nclass CurrentPageInput extends React.Component{\n  static getDerivedStateFromProps(props, state) {\n    if (state.realCurPage !== props.currentPageIndex) {\n      return {\n        realCurPage: props.currentPageIndex,\n        curPageInputText: (props.currentPageIndex + 1).toString()\n      }\n    }\n    return state\n  }\n  \n  constructor(){\n    super()\n    this.state = {\n      realCurPage: -1,  // Stored for judging whether current page is changed\n      curPageInputText: '0'\n    }\n  }\n\n  isValidValue(rawValue) {\n    if (!rawValue.match(VALID_POSITIVE_NUM_REGEX)) {\n      return false\n    }\n    const value = parseInt(rawValue, 10)\n    return value > 0 && value <= this.props.totalPageCount\n  }\n\n  onChangeCurrentPage(event) {\n    const value = event.target.value\n    this.setState({\n      curPageInputText: value\n    })\n\n    if (this.switchPageTimer !== undefined) {\n      clearTimeout(this.switchPageTimer)\n    }\n\n    if (this.isValidValue(value) ){\n      this.switchPageTimer = setTimeout(() => {\n        this.props.onGoToPage(parseInt(value, 10) - 1)\n      }, TIMEOUT)\n    }\n  }\n\n  render() {\n    const errorClassName = this.isValidValue(this.state.curPageInputText)?'':'error'\n    return (<input type=\"text\" className={`QP__results__current-page ${errorClassName}`} disabled={this.props.loading}\n             value={this.state.curPageInputText} onChange={(e) => this.onChangeCurrentPage(e)}/>)\n  }\n}\n\nclass ResultTable extends React.Component{\n\n  render(){\n    const options = {\n      showRowNumber: false,\n      sort: 'disable',\n      width: \"100%\", \n      height: \"100%\"\n    };\n    const {data, currentPageIndex, totalPageCount, onGoToPage, loading } = this.props\n\n    return (\n      <div className=\"QP__results\">\n        <div className=\"QP__results__title\">\n          <div className=\"QP__results__label\">RESULTS</div>\n          {(currentPageIndex !== -1) && <div className=\"QP__results__pages\">\n            <div className=\"QP__results__changepage\">\n              <div className=\"qp-icon qp-first-page-icon\"\n               onClick={() => {onGoToPage(0)}}/>  \n            </div>\n            <div className=\"QP__results__changepage\">\n              {(currentPageIndex > 0) && \n              <div className=\"qp-icon qp-prev-page-icon\"\n               onClick={() => {onGoToPage(currentPageIndex - 1)}}/>\n              }\n            </div>\n            <CurrentPageInput currentPageIndex={currentPageIndex} loading={loading}\n             totalPageCount={totalPageCount} onGoToPage={onGoToPage}/>\n            <div className=\"QP__results__pages-separator\">of</div>\n            <div className=\"QP__results__pages-total-count\">{totalPageCount}</div>\n            <div className=\"QP__results__changepage\" >\n              {(currentPageIndex < totalPageCount - 1) &&\n              <div className=\"qp-icon qp-next-page-icon\"\n               onClick={() => {onGoToPage(currentPageIndex + 1)}}/>\n              }\n            </div>\n            <div className=\"QP__results__changepage\">\n              <div className=\"qp-icon qp-last-page-icon\"\n               onClick={() => {onGoToPage(totalPageCount - 1)}}/>  \n            </div>\n          </div>}\n        </div>\n        <div className=\"QP__results__table\">\n          {(currentPageIndex !== -1) && (<Chart\n            chartType=\"Table\"\n            width=\"100%\" \n            height=\"100%\" \n            data={data[currentPageIndex]}\n            options={options}\n          />)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ResultTable\n","import {createInstanceAsync, getObjectDataAsync} from '../../utils/restUtils'\nimport {httpErrorHandling} from '../../utils/utils'\nimport {CONSTANTS, RESULT_ACTIONS, MAIN_UI_ACTIONS} from '../../constants'\n\n\nexport const goToPage = (pageIndex) => {\n\treturn (dispatch, getState) => {\n\t\tconst state = getState()\n\t\tconst data = state.resultTable.data\n\t\tif(data[pageIndex] !== undefined) {\n\t\t\tdispatch({\n\t\t\t\ttype: RESULT_ACTIONS.GO_TO_PAGE,\n\t\t\t\tpayload: pageIndex\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tdispatch({\n\t\t\t\ttype: RESULT_ACTIONS.BEGIN_LOADING_PAGE,\n\t\t\t})\n\t\t\t// Here we never need to get page 0 as it's already got at start,\n\t\t\t// so getObjectDataWithRetry can satisfy us\n\t\t\tgetObjectDataWithRetry(dispatch, getState, pageIndex)\n\t\t \t .catch(httpErrorHandling(dispatch, MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG))\n\t\t}\n\t}\n}\n\nconst getObjectDataWithRetry = async (dispatch, getState, pageIndex) => {\n\tfor (let i = 0; i < CONSTANTS.MAX_TRY_COUNT; i++) {\n\t\ttry {\n\t\t\tconst data = await getObjectDataAsync(dispatch, getState, pageIndex)\n\t\t\tdispatch({\n\t\t\t\ttype: RESULT_ACTIONS.REFRESH_RESULT_PANEL,\n\t\t\t\tpayload: data\n\t\t\t})\n\t\t\treturn data\n\t\t} catch (err) {\n\t\t\t// Only retry once\n\t\t\tconst isLastAttempt = i > 0\n\t\t\tif (!isLastAttempt && err.response.status === 404) {\n\t\t\t\t// Re-create a instance here\n\t\t\t\tconst data = await createInstanceAsync(dispatch, getState, 0)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: RESULT_ACTIONS.REFRESH_INSTANCE_ID,\n\t\t\t\t\tpayload: data\n\t\t\t\t})\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\t}\n}\n\n","import ResultTable from './ResultTable'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {goToPage} from '../actions'\n\nfunction mapStateToProps(state) {\n  const {data, ui} = state.resultTable\n  const {currentPageIndex, totalPageCount, loading} = ui\n\n  return {\n    data,\n    currentPageIndex, \n    totalPageCount, \n    loading\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onGoToPage: goToPage,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultTable)","import React from 'react'\nimport DatasetDropListContainer from '../../subViews/datasetList/components/DatasetDropListContainer'\nimport FilterSummaryContainer from '../../subViews/filters/components/FilterSummaryContainer';\nimport SortingListGroupContainer from '../../subViews/sorting/components/SortingListGroupContainer'\nimport HttpBoardContainer from '../../subViews/httpBoard/components/HttpBoardContainer'\nimport AttributeMetricArea from '../../subViews/AttributeMetricArea'\nimport ResultTableContainer from '../../subViews/resultTable/components/ResultTableContainer'\nimport {Alert, Button} from 'react-bootstrap'\n\nimport './MainPage.scss'\n\n\nconst MainPage = ({\n    dataIsEmpty,\n    latestError,\n    showError,\n    onApplyCondition,\n    onHideErrorMessage\n}) => {\n    return (\n        <div className=\"quality-play-app\">\n            {showError && <Alert className=\"pop-alert\" bsStyle=\"danger\" onDismiss={onHideErrorMessage}>\n                {latestError}\n            </Alert>}\n            <div className=\"QP__title\">\n                <div className=\"QP__title__icon qp-mstr-icon\"></div>\n            </div>\n            <div className=\"QP__context\">\n                <div className=\"QP__context__left\">\n                    <DatasetDropListContainer />\n                    { !dataIsEmpty && (<div className=\"QP__conditions\">\n                        <AttributeMetricArea />\n                        <div className=\"QP__conditions__viewFilters\">\n                            <div className=\"QP__conditions__title\">View Filters</div>\n                            <FilterSummaryContainer isViewFilter={true}/>    \n                        </div>    \n                        <div className=\"QP__conditions__metrics\">\n                            <div className=\"QP__conditions__title\">Metric Limits</div>\n                            <FilterSummaryContainer isViewFilter={false}/>\n                        </div>\n                        <SortingListGroupContainer />                    \n                    </div>)}                    \n                    { !dataIsEmpty && (<div className=\"QP__apply-bar\">\n                        <Button className=\"QP__apply-bar__button\" onClick={() => onApplyCondition()}>Apply</Button>\n                    </div>)}\n                </div>\n                <div className=\"QP__context__right\"> \n                    <ResultTableContainer />\n                    <div className=\"QP__https\">\n                        <HttpBoardContainer />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainPage\n","import {createInstanceAsync} from '../utils/restUtils'\nimport {httpErrorHandling} from '../utils/utils'\nimport {MAIN_UI_ACTIONS, RESULT_ACTIONS} from '../constants'\n\nexport const hideErrorMessage = () => {\n  return {\n    type: MAIN_UI_ACTIONS.HIDE_ERROR_MSG\n  }\n}\n\nexport const applyCondition = () => {\n  // Re-apply condition, must be start with 0\n  return (dispatch, getState) => {\n    createInstanceAsync(dispatch, getState, 0).then((data) => {\n      dispatch({\n\t\t\t\ttype: RESULT_ACTIONS.REFRESH_RESULT_PANEL,\n\t\t\t\tpayload: data\n\t\t\t})\n    }).catch(httpErrorHandling(dispatch, MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG))\n  };\n}","import MainPage from './MainPage'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {applyCondition, hideErrorMessage} from '../actions'\n\nfunction mapStateToProps(state) {\n    const {\n        data\n    } = state.datasetList\n    const {\n        latestError,\n        showError\n    } = state.ui\n    return {\n        dataIsEmpty: data.length === 0,\n        latestError,\n        showError\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        onApplyCondition: applyCondition,\n        onHideErrorMessage: hideErrorMessage\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)","import demoConfig from './config'\n\nconst initialState = {\n  ui: {\n    projectId: demoConfig.projectId,\n    pageLimit: demoConfig.itemPerPage,\n    latestError: \"\",\n    showError: false\n  },\n  datasetList: {\n    data: [],\n    ui: {\n      selectDatasetIndex: -1\n    }\n  },\n  attributes: {\n    ui: {\n      unselect: {}\n    }\n  },\n  metrics: {\n    ui: {\n      unselect: {}\n    }\n  },\n  resultTable: {\n    data: [],\n    ui: {\n      currentPageIndex: -1,\n      totalPageCount: 0,\n      loading: false\n    }\n  },\n  http: {\n    data: [],\n    ui: {\n      \n    }\n  },\n  filters: {\n    viewFilter: {\n        summary: [],\n        expressions: {\n            operator: 'And',\n            operands: []\n        }\n    },\n    metricLimits: {\n        summary: {},\n        expressions: {\n        }\n    },\n    ui: {}\n  },\n  sorting: {\n    output: [],\n    ui: {\n      sortingDropdownNum: 1,\n      sorting: [\n        {\n          sortby: -1,\n          order: -1\n        }\n      ]\n    },\n    data: []\n  }\n}\n\nexport default initialState","import {FILTER_ACTIONS} from '../../constants'\nimport initialState from '../../initialState'\nimport produce from \"immer\"\n\nconst reducer = (state = initialState.filters, action = {}) => {\n\n    // let newState = {};\n    // let newItem = null;\n    // let newNotes = [];\n    // let selectIdx = -1;\n    const nextState = produce(state, newState => {\n        switch (action.type) {\n            case FILTER_ACTIONS.ADD_NEW_EXPRESSION:\n                let isViewFilter = action.payload.isViewFilter\n                let targetObjectId = action.payload.targetObjectId\n                let expression = action.payload.expression\n                let contentDisplay = action.payload.contentDisplay\n\n                if (isViewFilter) {\n                    newState.viewFilter.expressions.operands = [...state.viewFilter.expressions.operands, expression]\n                    newState.viewFilter.summary = [...state.viewFilter.summary, contentDisplay]\n                } else {\n                    let newMetricLimitsExpressions = Object.assign({}, state.metricLimits.expressions)\n                    let newMetricLimitsSummary = Object.assign({}, state.metricLimits.summary)\n\n                    if (newMetricLimitsExpressions[targetObjectId]) {\n                        newMetricLimitsExpressions[targetObjectId].operands.push(expression)\n                        newMetricLimitsSummary[targetObjectId].push(contentDisplay)\n                    } else {\n                        let newMetricLimitExpression = {\n                            operator: 'And',\n                            operands: [expression]\n                        }\n                        newMetricLimitsExpressions[targetObjectId] = newMetricLimitExpression\n                        newMetricLimitsSummary[targetObjectId] = [contentDisplay]\n                    }\n\n                    newState.metricLimits.expressions = newMetricLimitsExpressions\n                    newState.metricLimits.summary = newMetricLimitsSummary\n\n                }\n\n                return\n\n            case FILTER_ACTIONS.MODIFY_EXPRESSION:\n                let modifyExpressionIndex = action.payload.expressionIndex\n                let modifyExpression = action.payload.expression\n                let modifyContentDisplay = action.payload.contentDisplay\n\n                targetObjectId = action.payload.targetObjectId\n                isViewFilter = action.payload.isViewFilter\n\n                if (isViewFilter) {\n                    newState.viewFilter.expressions.operands = [...state.viewFilter.expressions.operands.slice(0, modifyExpressionIndex), modifyExpression, ...state.viewFilter.expressions.operands.slice(modifyExpressionIndex + 1)]\n                    newState.viewFilter.summary = [...state.viewFilter.summary.slice(0, modifyExpressionIndex), modifyContentDisplay, ...state.viewFilter.summary.slice(modifyExpressionIndex + 1)]\n                } else {\n                    let newMetricLimitsExpressions = Object.assign({}, state.metricLimits.expressions)\n                    let newMetricLimitsSummary = Object.assign({}, state.metricLimits.summary)\n\n                    newMetricLimitsExpressions[targetObjectId].operands = [...state.metricLimits.expressions[targetObjectId].operands.slice(0, modifyExpressionIndex), modifyExpression, ...state.metricLimits.expressions[targetObjectId].operands.slice(modifyExpressionIndex + 1)]\n                    newMetricLimitsSummary[targetObjectId] = [...newMetricLimitsSummary[targetObjectId].slice(0, modifyExpressionIndex), modifyContentDisplay, ...newMetricLimitsSummary[targetObjectId].slice(modifyExpressionIndex + 1)]\n\n                    newState.metricLimits.expressions = newMetricLimitsExpressions\n                    newState.metricLimits.summary = newMetricLimitsSummary\n                }\n                return\n\n            case FILTER_ACTIONS.DELETE_AN_EXPRESSION:\n                let deleteIndex = action.payload.index\n                isViewFilter = action.payload.isViewFilter\n                targetObjectId = action.payload.targetObjectId\n\n                if (isViewFilter) {\n                    newState.viewFilter.expressions.operands = [...state.viewFilter.expressions.operands.slice(0, deleteIndex), ...state.viewFilter.expressions.operands.slice(deleteIndex + 1)]\n                    newState.viewFilter.summary = [...state.viewFilter.summary.slice(0, deleteIndex), ...state.viewFilter.summary.slice(deleteIndex + 1)]\n                } else {\n                    let newMetricLimitsExpressions = Object.assign({}, state.metricLimits.expressions)\n                    let newMetricLimitsSummary = Object.assign({}, state.metricLimits.summary)\n\n                    if(state.metricLimits.expressions[targetObjectId].operands.length > 1){\n                        newMetricLimitsExpressions[targetObjectId].operands = [...state.metricLimits.expressions[targetObjectId].operands.slice(0, deleteIndex), ...state.metricLimits.expressions[targetObjectId].operands.slice(deleteIndex + 1)]\n                        newMetricLimitsSummary[targetObjectId] = [...newMetricLimitsSummary[targetObjectId].slice(0, deleteIndex), ...newMetricLimitsSummary[targetObjectId].slice(deleteIndex + 1)]    \n                    }else{\n                        //only have one expression for specify metric, then remove key-value(\"metricId\":{expression})\n                        delete newMetricLimitsExpressions[targetObjectId]\n                        delete newMetricLimitsSummary[targetObjectId]\n                    }\n\n                    newState.metricLimits.expressions = newMetricLimitsExpressions\n                    newState.metricLimits.summary = newMetricLimitsSummary\n                }\n                return\n            case FILTER_ACTIONS.CLEAR_ALL_FILTER_EXPRESSIONS:\n                isViewFilter = action.payload\n                if (isViewFilter) {\n                    if (state.viewFilter){\n                        newState.viewFilter.expressions.operands = []\n                        newState.viewFilter.summary = []\n                    }\n                } else {\n                    if(state.metricLimits){\n                        newState.metricLimits.expressions = {}\n                        newState.metricLimits.summary = {}\n                    }\n                }\n                return\n            default:\n                return\n        }\n    })\n    return nextState\n}\n\nexport default reducer;","import initialState from '../initialState'\n\nimport {MAIN_UI_ACTIONS} from '../constants'\n\nconst uiReducer = (state=initialState.ui, action) => {\n  switch(action.type){\n    case MAIN_UI_ACTIONS.DISPLAY_ERROR_MSG:\n      return {\n        ...state,\n        latestError: action.payload,\n        showError: true\n      }\n    case MAIN_UI_ACTIONS.HIDE_ERROR_MSG:\n      return {\n        ...state,\n        showError: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default uiReducer","// import C from '../constants'\n// import initialState from './initialState'\nimport {ATTRIBUTES_ACTIONS} from '../../constants'\nimport initialState from '../../initialState'\n\nconst reducer = (state=initialState.attributes, action = {}) => {\n    let unselect = {}\n    switch(action.type){\n    case ATTRIBUTES_ACTIONS.TOGGLE_ATTRIBUTE_SELECTION:\n        unselect = {...state.ui.unselect}\n        const attributeId = action.payload\n        if (attributeId in unselect) {\n            delete unselect[attributeId]\n        } else {\n            unselect[attributeId] = true\n        }\n        return {...state, ui: {unselect}}\n    case ATTRIBUTES_ACTIONS.TOGGLE_ALL_ATTRIBUTES:\n        unselect = {}    \n        const {attributes, select} = action.payload        \n        if (!select) {\n            // Unselect all, use all ids\n            for (const attribute of attributes) {\n                unselect[attribute.id] = true\n            }            \n        }\n        return {...state, ui: {unselect}}\n    default:\n        return state;\n    }\n}\n\nexport default reducer;","import {METRIC_ACTIONS} from '../../constants'\n\nimport initialState from '../../initialState'\n\nconst reducer = (state=initialState.metrics, action = {}) => {\n    let unselect = {}\n    switch(action.type){\n    case METRIC_ACTIONS.TOGGLE_METRIC_SELECTION:\n        unselect = {...state.ui.unselect}\n        const metricId = action.payload\n        if (metricId in unselect) {\n            delete unselect[metricId]\n        } else {\n            unselect[metricId] = true\n        }\n        return {...state, ui: {unselect}}\n    case METRIC_ACTIONS.TOGGLE_ALL_METRICS:\n        unselect = {}    \n        const {metrics, select} = action.payload        \n        if (!select) {\n            // Unselect all, use all ids\n            for (const metric of metrics) {\n                unselect[metric.id] = true\n            }            \n        }\n        return {...state, ui: {unselect}}\n    default:\n        return state;\n    }\n}\n\nexport default reducer;","import initialState from '../../initialState'\n\nimport {FILTER_ACTIONS} from  '../../constants'\n\n//fake data here TODO huiwang\n/*\n    let attribute1 = {\n        name: \"Category\",\n        id: \"8D679D3711D3E4981000E787EC6DE8A4\",\n        type: \"Attribute\",\n        forms: [\n            {\n                id: \"CCFBE2A5EADB4F50941FB879CCF1721C\",\n                name: \"DESC\",\n                dataType: \"Char\"\n            },\n            {\n                id: \"45C11FA478E745FEA08D781CEA190FE5\",\n                name: \"ID\",\n                dataType: \"Real\"\n            }\n        ],\n        elements:[{ id: \"h2;8D679D3711D3E4981000E787EC6DE8A4\", name: \"Movies\" }, { id: \"h1;8D679D3711D3E4981000E787EC6DE8A4\", name: \"Books\" }]\n    }\n    \n    let metric1 = {\n\n        name: \"Revenue\",\n        id: \"4C05177011D3E877C000B3B2D86C964F\",\n        type: \"Metric\"\n    }\n\n    let metric2 = {\n        name: \"Cost\",\n        id: \"C105177011D3E877C000B3B2D86C9667\",\n        type: \"Metric\"\n    }\n\n\nlet availableObjects = [attribute1, metric1,metric2]\n\nconst initialState = {\n    data: [],\n    ui: {},\n    availableObjects: availableObjects\n    \n}\n*/\n\nconst reducer = (state=initialState.datasetList, action = {}) => {\n    switch(action.type){\n    case FILTER_ACTIONS.MODIFY_ATTRIBUTE_ELEMENTS:\n        const {data, attributeId} = action.payload\n        const newData = [...state.data]\n        const currentDataset = newData[state.ui.selectDatasetIndex]\n        const attributeIndex = currentDataset.definition.availableObjects.attributes.findIndex((attribute) => {\n            return attribute.id === attributeId\n        })\n        currentDataset.definition.availableObjects.attributes[attributeIndex].elements = data\n        return {\n            ...state, \n            data: newData \n        }\n    default:\n        return state\n    }\n}\n\nexport default reducer","// import C from '../constants'\n// import initialState from './initialState'\n// import {TOGGLE_METRIC_SELECTION, TOGGLE_ALL_METRICS} from './actions'\n\nimport initialState from '../../initialState'\nimport demoConfig from '../../config'\nimport {getTableData} from '../../utils/transformResult'\nimport {RESULT_ACTIONS} from '../../constants'\n\n\nconst PAGE_SIZE = demoConfig.itemPerPage\n\nconst reducer = (state=initialState.resultTable, action = {}) => {\n  switch(action.type){\n  case RESULT_ACTIONS.REFRESH_INSTANCE_ID:\n    // This action is specially used for select in elements\n    return {\n      ...state,\n      instanceId: action.payload.instanceId,   // Used for get attribute element\n    }\n  case RESULT_ACTIONS.REFRESH_RESULT_PANEL:\n   // console.log(action.payload);\n    const data = action.payload\n    const paging = data.data.paging\n    const currentPageIndex = paging.offset / demoConfig.itemPerPage\n    // When recreating instance, we need to clear the data of all pages\n    const newData = (currentPageIndex === 0)? [] : [...state.data]\n    const totalPageCount = Math.ceil(paging.total/PAGE_SIZE)\n    newData[currentPageIndex] = getTableData(data)\n    return {\n      data: newData, \n      instanceId: data.instanceId,   // Used for get attribute element\n      ui: {\n        currentPageIndex,\n        totalPageCount,\n        loading: false\n      }\n    }\n  case RESULT_ACTIONS.GO_TO_PAGE:\n    const pageIndex = action.payload\n    return {\n      ...state,\n      ui: {\n        ...state.ui,\n        currentPageIndex: pageIndex,\n      }\n    }\n  case RESULT_ACTIONS.BEGIN_LOADING_PAGE:\n    return {\n      ...state,\n      ui: {\n        ...state.ui,\n        loading: true\n      }\n    }\n  default:\n    return state;\n  }\n}\n\nexport default reducer;","export const getTableData = (json) => {\n\n//Gets the elements for a row name \n    const getElementsForRowName = (row, name, formIndex) => {\n        return row.elements.map(element => {\n            if(element.subtotal) {\n                return element.formValues[0];\n            } else {\n                return element.formValues[formIndex];\n            }\n        })\n    };\n\n    \n//Gets the elements for a column name excluding the Metric column\n    const getElementsForColumnName = (column, name, formIndex) => column.elements.map(element => element.formValues[formIndex]);\n \n//Gets the row's elements including the row's different formValues \n    const parseRows = () => {\n        const rows = json.definition.grid.rows;\n        const responseRowData = [];\n        let rowIndex = 0;\n        rows.forEach(row => {\n            let curRowData = {};\n            if (row.forms.length === 1) {\n                const rowName = row.name;\n                curRowData.name = rowName;\n                curRowData.elements = getElementsForRowName(row, rowName, 0);\n                curRowData.index = rowIndex\n                responseRowData.push(curRowData)\n            } else {\n                row.forms.forEach((form, formIndex, rowIndex) => {\n                    curRowData = {};\n                    const rowName = `${row.name}@${form.name}`;\n                    curRowData.name = rowName;\n                    curRowData.elements = getElementsForRowName(row, row.name, formIndex);\n                    curRowData.index = rowIndex;\n                    responseRowData.push(curRowData)\n                });\n            }\n            rowIndex++;\n        });\n        return responseRowData;\n    }\n\n    const parseColumns = () => {\n        const columns = json.definition.grid.columns;\n        const responseColumnData = []\n        let columnIndex = 0;\n        columns.forEach(column => {\n            if(column.name !== \"Metrics\") {\n                let curColumnData = {};\n                if (column.forms.length === 1) {\n                    const columnName = column.name;\n                    curColumnData.name = columnName;\n                    curColumnData.elements = getElementsForColumnName(column, columnName, 0);\n                    curColumnData.index = columnIndex\n                    responseColumnData.push(curColumnData)\n                } else {\n                    column.forms.forEach((form, formIndex, columnIndex) => {\n                        curColumnData = {};\n                        const columnName = `${column.name}@${form.name}`;\n                        curColumnData.name = columnName;\n                        curColumnData.elements = getElementsForColumnName(column, column.name, formIndex);\n                        curColumnData.index = columnIndex\n                        responseColumnData.push(curColumnData)\n                    });\n                }\n                columnIndex++;\n            }\n        });\n        return responseColumnData;\n    }\n    const parseMetrics = () => {\n        let index = 0;\n        let metricElements = {};\n        json.definition.grid.columns.forEach(column => {\n            if(column.name === \"Metrics\") {\n                metricElements = {\n                    name: column.name,\n                    elements: column.elements.map(element => element.name),\n                    index\n                };\n            }\n            index++;\n        })\n        return metricElements;\n    };\n\n//Maps indices in indexMap to their respective values in rowElements\n    const mapIndex = (rowElements, indexMap) => {\n        return indexMap.map((row) => {\n            return row.map((r, rowIndex) => {\n                return rowElements[rowIndex].elements[r];\n            })\n        });\n    };\n    const transposeArray = array => array[0].map((col, i) => array.map(row => row[i]));\n    const rowElements = parseRows();\n    const columnElements = [...parseColumns(), parseMetrics()];\n    const headerDataRows = mapIndex(rowElements, json.data.headers.rows)\n    const headerDataColumns = mapIndex(columnElements, transposeArray(json.data.headers.columns))    \n    const rowNames = json.data.headers.rows[0].map((value, valueIndex) => rowElements[valueIndex].name);\n  \n    const columnNames = [];\n    columnElements.forEach(column => {\n        if(column.elements) {\n            columnNames.push(...column.elements)\n        } else {\n            columnNames.push(column.name)\n        }\n    })\n    const rawData = json.data.metricValues.raw;\n    const formattedwData = json.data.metricValues.formatted;\n    const allHeaders = [...rowNames, ...columnNames];\n    const allRows = headerDataRows.map((row, rowIndex) => {\n        return [...row, ...formattedwData[rowIndex]]   // Append row and metric data\n    });\n    return [allHeaders, ...allRows];\n}","import initialState from '../../initialState'\nimport {HTTP_ACTIONS} from '../../constants'\n\nconst reducer = (state = initialState.http, action = {}) => {\n    switch (action.type) {\n        case HTTP_ACTIONS.ADD_NEW_HTTP_REQUEST:\n            return {\n                ...state, data: [\n                    ...state.data, action.payload\n                ]\n            }\n        case HTTP_ACTIONS.CLEAR_REQUESTS:\n            return {\n                data: [],\n                ui: {}\n            }\n        case HTTP_ACTIONS.SELECT_REQUEST:\n            return {\n                ...state,\n                ui: {\n                    selectRequestIndex: action.payload,\n                    selectDetailTab: 0\n                }\n            } \n        case HTTP_ACTIONS.SELECT_DETAIL_TAB:\n        return {\n            ...state,\n                ui: {\n                    ...state.ui,\n                    selectDetailTab: action.payload\n                }\n            } \n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import {SORT_ACTIONS} from '../../constants'\nimport initialState from '../../initialState'\n\nfunction syncToOutput(state) {\n    const selectedElement = state.ui.sorting.map(e => e.sortby).filter(e => e >= 0)\n    return { ...state, output: selectedElement.map(e => state.data[e]) }\n}\n\nconst reducer = (state = initialState.sorting, action = {}) => {\n    switch (action.type) {\n        case SORT_ACTIONS.CHANGE_SORTING_CHOICE:\n            return {\n                ...state, ui: {\n                    ...state.ui, sorting: state.ui.sorting.map(\n                        (data, i) => i === action.payload.dropDownIndex ? { ...data, order: action.payload.subIndex }\n                            : data)\n                }\n            }\n        case SORT_ACTIONS.CHANGE_SORTING_ELEMENT:\n            return {\n                ...state, ui: {\n                    ...state.ui, sorting: state.ui.sorting.map(\n                        (data, i) => i === action.payload.dropDownIndex ? { ...data, sortby: action.payload.subIndex }\n                            : data)\n                }\n            }\n        case SORT_ACTIONS.ADD_SORTING_DROPDOWN:\n            return {\n                ...state, ui: {\n                    sortingDropdownNum: action.payload, sorting: [...state.ui.sorting, {\n                        sortby: -1,\n                        order: -1\n                    }],\n                }\n            }\n        case SORT_ACTIONS.CHANGE_SORTING_DATA:\n            const changeDataState = {\n                ...state, data: state.data.map((d, i) => \n                (i === state.ui.sorting[action.payload].sortby && d.type !== \"attribute\") \n                ? { ...d, order: state.ui.sorting[action.payload].order === 0 ? \"ascending\" : \"descending\" }\n                : d)\n            }\n            return syncToOutput(changeDataState)\n        case SORT_ACTIONS.DELETE_SORTING_DROPDOWN:\n            const deleteDataState = {\n                ...state, ui: {\n                    ...state.ui, sorting: state.ui.sorting.filter((e, index) => index !== action.payload), sortingDropdownNum: state.ui.sortingDropdownNum - 1\n                }\n            }\n            return syncToOutput(deleteDataState)\n        case SORT_ACTIONS.CLEAR_SORTING_STATE:\n            return {\n                ...state, output: [],\n                ui: {\n                    sortingDropdownNum: 1,\n                    sorting: [\n                        {\n                            sortby: -1,\n                            order: -1\n                        }\n                    ]\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","// import C from '../constants'\n// import initialState from './initialState'\n\nimport { combineReducers } from 'redux'\n\nimport filtersReducer from \"../subViews/filters/reducer\"\n\nimport initialState from '../initialState'\nimport uiReducer from './uiReducer'\n\nimport {DATASET_LIST_ACTIONS} from '../constants'\nimport { sortingDataTransform } from \"../utils/utils\"\n\n\nimport attributesReducer from \"../subViews/attributes/reducer\"\nimport metricsReducer from \"../subViews/metrics/reducer\"\nimport datasetsReducer from '../subViews/datasetList/reducer'\nimport resultTableReducer from '../subViews/resultTable/reducer'\nimport httpReducer from '../subViews/httpBoard/reducer'\nimport sortingReduce from \"../subViews/sorting/reducer\"\n\n\n\nconst allSubReducers = combineReducers({\n    ui: uiReducer,\n    datasetList: datasetsReducer, \n    filters: filtersReducer,\n    sorting: sortingReduce,\n    http: httpReducer,\n    attributes: attributesReducer,\n    metrics: metricsReducer,\n    resultTable: resultTableReducer,\n})\n\nconst rootReducer = (state, action) => {\n    // console.log('root state:', state)\n    let datasetList = {}\n    let sortingData = []\n    switch(action.type){\n    case DATASET_LIST_ACTIONS.CHANGE_SELECT_DATASET:\n        datasetList = {...state.datasetList, ui: {selectDatasetIndex: action.payload}}\n        sortingData = sortingDataTransform(state.datasetList.data[action.payload].definition)\n        return {...initialState, \n            datasetList, sorting: {\n                ...state.sorting, data: sortingData, output: [], ui: {\n                    sortingDropdownNum: 1,\n                    sorting: [\n                        {\n                            sortby: -1,\n                            order: -1\n                        }\n                    ]\n                }\n            },\n            http: state.http\n        }\n    case DATASET_LIST_ACTIONS.SET_DATASET_LIST:\n        datasetList = {\n            data: action.payload, \n            ui: {\n                selectDatasetIndex: 0\n            }\n        }\n        sortingData = sortingDataTransform(action.payload[0].definition)\n        return {...initialState, \n            datasetList,\n            sorting:{ ...state.sorting, data: sortingData },\n            http: state.http\n        }\n    default:\n        return allSubReducers(state, action)\n    }\n}\n\nexport default rootReducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport MainPageContainer from './main/components/MainPageContainer';\nimport rootReducers from './main/rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nlet store = createStoreWithMiddleware(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <Provider store={store}>\n        <MainPageContainer />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}